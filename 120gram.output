State 0 conflicts: 1 shift/reduce
State 4 conflicts: 2 shift/reduce
State 7 conflicts: 4 shift/reduce
State 32 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 102 conflicts: 4 shift/reduce
State 111 conflicts: 2 shift/reduce
State 112 conflicts: 1 shift/reduce
State 115 conflicts: 2 shift/reduce
State 138 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 157 conflicts: 4 shift/reduce, 1 reduce/reduce
State 158 conflicts: 2 shift/reduce
State 175 conflicts: 3 shift/reduce
State 176 conflicts: 3 shift/reduce
State 209 conflicts: 1 shift/reduce
State 221 conflicts: 1 shift/reduce
State 225 conflicts: 1 shift/reduce
State 227 conflicts: 1 shift/reduce
State 237 conflicts: 2 shift/reduce
State 240 conflicts: 1 shift/reduce
State 258 conflicts: 2 shift/reduce
State 261 conflicts: 1 shift/reduce
State 262 conflicts: 1 shift/reduce
State 265 conflicts: 1 shift/reduce
State 268 conflicts: 1 shift/reduce
State 269 conflicts: 1 shift/reduce
State 278 conflicts: 2 shift/reduce
State 304 conflicts: 1 shift/reduce
State 314 conflicts: 1 shift/reduce
State 336 conflicts: 1 shift/reduce
State 354 conflicts: 1 shift/reduce
State 355 conflicts: 1 shift/reduce
State 359 conflicts: 1 shift/reduce
State 376 conflicts: 1 shift/reduce
State 378 conflicts: 1 shift/reduce
State 406 conflicts: 1 shift/reduce
State 417 conflicts: 1 shift/reduce
State 483 conflicts: 1 shift/reduce
State 484 conflicts: 1 shift/reduce
State 506 conflicts: 1 shift/reduce
State 521 conflicts: 1 shift/reduce
State 550 conflicts: 2 shift/reduce
State 555 conflicts: 2 shift/reduce
State 557 conflicts: 1 shift/reduce
State 606 conflicts: 2 shift/reduce
State 636 conflicts: 1 shift/reduce
State 637 conflicts: 1 shift/reduce
State 660 conflicts: 1 shift/reduce
State 670 conflicts: 1 shift/reduce
State 686 conflicts: 2 shift/reduce
State 687 conflicts: 2 shift/reduce
State 691 conflicts: 2 shift/reduce
State 692 conflicts: 2 shift/reduce
State 697 conflicts: 1 shift/reduce
State 730 conflicts: 2 shift/reduce
State 755 conflicts: 1 shift/reduce
State 774 conflicts: 2 shift/reduce
State 779 conflicts: 2 shift/reduce
State 808 conflicts: 1 shift/reduce
State 814 conflicts: 1 shift/reduce
State 816 conflicts: 1 shift/reduce
State 817 conflicts: 1 shift/reduce
State 846 conflicts: 1 shift/reduce
State 865 conflicts: 1 shift/reduce
State 870 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 typedef_name: TYPEDEF_NAME

    2 namespace_name: original_namespace_name

    3 original_namespace_name: NAMESPACE_NAME

    4 class_name: CLASS_NAME
    5           | template_id

    6 enum_name: ENUM_NAME

    7 template_name: TEMPLATE_NAME

    8 identifier: IDENTIFIER

    9 literal: integer_literal
   10        | character_literal
   11        | floating_literal
   12        | string_literal
   13        | boolean_literal

   14 integer_literal: INTEGER

   15 character_literal: CHARACTER

   16 floating_literal: FLOATING

   17 string_literal: STRING

   18 boolean_literal: TRUE
   19                | FALSE

   20 translation_unit: declaration_seq_opt

   21 primary_expression: literal
   22                   | THIS
   23                   | '(' expression ')'
   24                   | id_expression

   25 id_expression: unqualified_id
   26              | qualified_id

   27 unqualified_id: identifier
   28               | operator_function_id
   29               | conversion_function_id
   30               | '~' class_name

   31 qualified_id: nested_name_specifier unqualified_id
   32             | nested_name_specifier TEMPLATE unqualified_id

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier
   34                      | namespace_name COLONCOLON nested_name_specifier
   35                      | class_name COLONCOLON
   36                      | namespace_name COLONCOLON

   37 postfix_expression: primary_expression
   38                   | postfix_expression '[' expression ']'
   39                   | postfix_expression '(' expression_list_opt ')'
   40                   | DOUBLE '(' expression_list_opt ')'
   41                   | INT '(' expression_list_opt ')'
   42                   | CHAR '(' expression_list_opt ')'
   43                   | BOOL '(' expression_list_opt ')'
   44                   | postfix_expression '.' TEMPLATE COLONCOLON id_expression
   45                   | postfix_expression '.' TEMPLATE id_expression
   46                   | postfix_expression '.' COLONCOLON id_expression
   47                   | postfix_expression '.' id_expression
   48                   | postfix_expression ARROW TEMPLATE COLONCOLON id_expression
   49                   | postfix_expression ARROW TEMPLATE id_expression
   50                   | postfix_expression ARROW COLONCOLON id_expression
   51                   | postfix_expression ARROW id_expression
   52                   | postfix_expression PLUSPLUS
   53                   | postfix_expression MINUSMINUS
   54                   | DYNAMIC_CAST '<' type_id '>' '(' expression ')'
   55                   | STATIC_CAST '<' type_id '>' '(' expression ')'
   56                   | REINTERPRET_CAST '<' type_id '>' '(' expression ')'
   57                   | CONST_CAST '<' type_id '>' '(' expression ')'
   58                   | TYPEID '(' expression ')'
   59                   | TYPEID '(' type_id ')'

   60 expression_list: assignment_expression
   61                | expression_list ',' assignment_expression

   62 unary_expression: postfix_expression
   63                 | PLUSPLUS cast_expression
   64                 | MINUSMINUS cast_expression
   65                 | '*' cast_expression
   66                 | '&' cast_expression
   67                 | unary_operator cast_expression
   68                 | SIZEOF unary_expression
   69                 | SIZEOF '(' type_id ')'
   70                 | new_expression
   71                 | delete_expression

   72 unary_operator: '+'
   73               | '-'
   74               | '!'
   75               | '~'

   76 new_expression: NEW new_placement_opt new_type_id new_initializer_opt
   77               | COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt
   78               | NEW new_placement_opt '(' type_id ')' new_initializer_opt
   79               | COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt

   80 new_placement: '(' expression_list ')'

   81 new_type_id: type_specifier_seq new_declarator_opt

   82 new_declarator: ptr_operator new_declarator_opt
   83               | direct_new_declarator

   84 direct_new_declarator: '[' expression ']'
   85                      | direct_new_declarator '[' constant_expression ']'

   86 new_initializer: '(' expression_list_opt ')'

   87 delete_expression: DELETE cast_expression
   88                  | COLONCOLON DELETE cast_expression
   89                  | DELETE '[' ']' cast_expression
   90                  | COLONCOLON DELETE '[' ']' cast_expression

   91 cast_expression: unary_expression
   92                | '(' type_id ')' cast_expression

   93 pm_expression: cast_expression
   94              | pm_expression DOTSTAR cast_expression
   95              | pm_expression ARROWSTAR cast_expression

   96 multiplicative_expression: pm_expression
   97                          | multiplicative_expression '*' pm_expression
   98                          | multiplicative_expression '/' pm_expression
   99                          | multiplicative_expression '%' pm_expression

  100 additive_expression: multiplicative_expression
  101                    | additive_expression '+' multiplicative_expression
  102                    | additive_expression '-' multiplicative_expression

  103 shift_expression: additive_expression
  104                 | shift_expression SL additive_expression
  105                 | shift_expression SR additive_expression

  106 relational_expression: shift_expression
  107                      | relational_expression '<' shift_expression
  108                      | relational_expression '>' shift_expression
  109                      | relational_expression LTEQ shift_expression
  110                      | relational_expression GTEQ shift_expression

  111 equality_expression: relational_expression
  112                    | equality_expression EQ relational_expression
  113                    | equality_expression NOTEQ relational_expression

  114 and_expression: equality_expression
  115               | and_expression '&' equality_expression

  116 exclusive_or_expression: and_expression
  117                        | exclusive_or_expression '^' and_expression

  118 inclusive_or_expression: exclusive_or_expression
  119                        | inclusive_or_expression '|' exclusive_or_expression

  120 logical_and_expression: inclusive_or_expression
  121                       | logical_and_expression ANDAND inclusive_or_expression

  122 logical_or_expression: logical_and_expression
  123                      | logical_or_expression OROR logical_and_expression

  124 conditional_expression: logical_or_expression
  125                       | logical_or_expression '?' expression ':' assignment_expression

  126 assignment_expression: conditional_expression
  127                      | logical_or_expression assignment_operator assignment_expression
  128                      | throw_expression

  129 assignment_operator: '='
  130                    | MULEQ
  131                    | DIVEQ
  132                    | MODEQ
  133                    | ADDEQ
  134                    | SUBEQ
  135                    | SREQ
  136                    | SLEQ
  137                    | ANDEQ
  138                    | XOREQ
  139                    | OREQ

  140 expression: assignment_expression
  141           | expression ',' assignment_expression

  142 constant_expression: conditional_expression

  143 statement: labeled_statement
  144          | expression_statement
  145          | compound_statement
  146          | selection_statement
  147          | iteration_statement
  148          | jump_statement
  149          | declaration_statement
  150          | try_block

  151 labeled_statement: identifier ':' statement
  152                  | CASE constant_expression ':' statement
  153                  | DEFAULT ':' statement

  154 expression_statement: expression_opt ';'

  155 compound_statement: '{' statement_seq_opt '}'

  156 statement_seq: statement
  157              | statement_seq statement

  158 selection_statement: IF '(' condition ')' statement
  159                    | IF '(' condition ')' statement ELSE statement
  160                    | SWITCH '(' condition ')' statement

  161 condition: expression
  162          | type_specifier_seq declarator '=' assignment_expression

  163 iteration_statement: WHILE '(' condition ')' statement
  164                    | DO statement WHILE '(' expression ')' ';'
  165                    | FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement

  166 for_init_statement: expression_statement
  167                   | simple_declaration

  168 jump_statement: BREAK ';'
  169               | CONTINUE ';'
  170               | RETURN expression_opt ';'
  171               | GOTO identifier ';'

  172 declaration_statement: block_declaration

  173 declaration_seq: declaration
  174                | declaration_seq declaration

  175 declaration: block_declaration
  176            | function_definition
  177            | template_declaration
  178            | explicit_instantiation
  179            | explicit_specialization
  180            | linkage_specification
  181            | namespace_definition

  182 block_declaration: simple_declaration
  183                  | asm_definition
  184                  | namespace_alias_definition
  185                  | using_declaration
  186                  | using_directive

  187 simple_declaration: decl_specifier_seq init_declarator_list ';'
  188                   | decl_specifier_seq ';'

  189 decl_specifier: storage_class_specifier
  190               | type_specifier
  191               | function_specifier
  192               | FRIEND
  193               | TYPEDEF

  194 decl_specifier_seq: decl_specifier
  195                   | decl_specifier_seq decl_specifier

  196 storage_class_specifier: AUTO
  197                        | REGISTER
  198                        | STATIC
  199                        | EXTERN
  200                        | MUTABLE

  201 function_specifier: INLINE
  202                   | VIRTUAL
  203                   | EXPLICIT

  204 type_specifier: simple_type_specifier
  205               | class_specifier
  206               | enum_specifier
  207               | elaborated_type_specifier
  208               | cv_qualifier

  209 simple_type_specifier: type_name
  210                      | nested_name_specifier type_name
  211                      | COLONCOLON nested_name_specifier_opt type_name
  212                      | CHAR
  213                      | WCHAR_T
  214                      | BOOL
  215                      | SHORT
  216                      | INT
  217                      | LONG
  218                      | SIGNED
  219                      | UNSIGNED
  220                      | FLOAT
  221                      | DOUBLE
  222                      | VOID

  223 type_name: class_name
  224          | enum_name
  225          | typedef_name

  226 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier
  227                          | class_key COLONCOLON identifier
  228                          | ENUM COLONCOLON nested_name_specifier identifier
  229                          | ENUM COLONCOLON identifier
  230                          | ENUM nested_name_specifier identifier
  231                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier
  232                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

  233 enum_specifier: ENUM identifier '{' enumerator_list_opt '}'

  234 enumerator_list: enumerator_definition
  235                | enumerator_list ',' enumerator_definition

  236 enumerator_definition: enumerator
  237                      | enumerator '=' constant_expression

  238 enumerator: identifier

  239 namespace_definition: named_namespace_definition
  240                     | unnamed_namespace_definition

  241 named_namespace_definition: original_namespace_definition
  242                           | extension_namespace_definition

  243 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}'

  244 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}'

  245 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}'

  246 namespace_body: declaration_seq_opt

  247 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';'

  248 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name
  249                              | COLONCOLON namespace_name
  250                              | nested_name_specifier namespace_name
  251                              | namespace_name

  252 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  253                  | USING TYPENAME nested_name_specifier unqualified_id ';'
  254                  | USING COLONCOLON nested_name_specifier unqualified_id ';'
  255                  | USING nested_name_specifier unqualified_id ';'
  256                  | USING COLONCOLON unqualified_id ';'

  257 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  258                | USING NAMESPACE COLONCOLON namespace_name ';'
  259                | USING NAMESPACE nested_name_specifier namespace_name ';'
  260                | USING NAMESPACE namespace_name ';'

  261 asm_definition: ASM '(' string_literal ')' ';'

  262 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}'
  263                      | EXTERN string_literal declaration

  264 init_declarator_list: init_declarator
  265                     | init_declarator_list ',' init_declarator

  266 init_declarator: declarator initializer_opt

  267 declarator: direct_declarator
  268           | ptr_operator declarator

  269 direct_declarator: declarator_id
  270                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  271                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq
  272                  | direct_declarator '(' parameter_declaration_clause ')' exception_specification
  273                  | direct_declarator '(' parameter_declaration_clause ')'
  274                  | CLASS_NAME '(' parameter_declaration_clause ')'
  275                  | CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause ')'
  276                  | CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')'
  277                  | direct_declarator '[' constant_expression_opt ']'
  278                  | '(' declarator ')'

  279 ptr_operator: '*'
  280             | '*' cv_qualifier_seq
  281             | '&'
  282             | nested_name_specifier '*'
  283             | nested_name_specifier '*' cv_qualifier_seq
  284             | COLONCOLON nested_name_specifier '*'

  285 cv_qualifier_seq: cv_qualifier
  286                 | cv_qualifier cv_qualifier_seq

  287 cv_qualifier: CONST
  288             | VOLATILE

  289 declarator_id: id_expression
  290              | COLONCOLON id_expression
  291              | COLONCOLON nested_name_specifier type_name
  292              | COLONCOLON type_name

  293 type_id: type_specifier_seq abstract_declarator_opt

  294 type_specifier_seq: type_specifier type_specifier_seq_opt

  295 abstract_declarator: ptr_operator abstract_declarator_opt
  296                    | direct_abstract_declarator

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq
  299                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification
  300                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')'
  301                           | direct_abstract_declarator_opt '[' constant_expression_opt ']'
  302                           | '(' abstract_declarator ')'

  303 parameter_declaration_clause: parameter_declaration_list ELLIPSIS
  304                             | parameter_declaration_list
  305                             | ELLIPSIS
  306                             | %empty
  307                             | parameter_declaration_list ',' ELLIPSIS

  308 parameter_declaration_list: parameter_declaration
  309                           | parameter_declaration_list ',' parameter_declaration

  310 parameter_declaration: decl_specifier_seq declarator
  311                      | decl_specifier_seq declarator '=' assignment_expression
  312                      | decl_specifier_seq abstract_declarator_opt
  313                      | decl_specifier_seq abstract_declarator_opt '=' assignment_expression

  314 function_definition: declarator ctor_initializer_opt function_body
  315                    | decl_specifier_seq declarator ctor_initializer_opt function_body
  316                    | declarator function_try_block
  317                    | decl_specifier_seq declarator function_try_block

  318 function_body: compound_statement

  319 initializer: '=' initializer_clause
  320            | '(' expression_list ')'

  321 initializer_clause: assignment_expression
  322                   | '{' initializer_list COMMA_opt '}'
  323                   | '{' '}'

  324 initializer_list: initializer_clause
  325                 | initializer_list ',' initializer_clause

  326 class_specifier: class_head '{' member_specification_opt '}'

  327 class_head: %empty
  328           | class_key identifier base_clause
  329           | class_key nested_name_specifier identifier
  330           | class_key nested_name_specifier identifier base_clause

  331 class_key: CLASS
  332          | STRUCT
  333          | UNION

  334 member_specification: member_declaration member_specification_opt
  335                     | access_specifier ':' member_specification_opt

  336 member_declaration: decl_specifier_seq member_declarator_list ';'
  337                   | decl_specifier_seq ';'
  338                   | member_declarator_list ';'
  339                   | ';'
  340                   | function_definition SEMICOLON_opt
  341                   | qualified_id ';'
  342                   | using_declaration
  343                   | template_declaration

  344 member_declarator_list: member_declarator
  345                       | member_declarator_list ',' member_declarator

  346 member_declarator: declarator
  347                  | declarator pure_specifier
  348                  | declarator constant_initializer
  349                  | identifier ':' constant_expression

  350 pure_specifier: '=' '0'

  351 constant_initializer: '=' constant_expression

  352 base_clause: ':' base_specifier_list

  353 base_specifier_list: base_specifier
  354                    | base_specifier_list ',' base_specifier

  355 base_specifier: COLONCOLON nested_name_specifier class_name
  356               | COLONCOLON class_name
  357               | nested_name_specifier class_name
  358               | class_name
  359               | VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name
  360               | VIRTUAL access_specifier nested_name_specifier_opt class_name
  361               | VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  362               | VIRTUAL nested_name_specifier_opt class_name
  363               | access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  364               | access_specifier VIRTUAL nested_name_specifier_opt class_name
  365               | access_specifier COLONCOLON nested_name_specifier_opt class_name
  366               | access_specifier nested_name_specifier_opt class_name

  367 access_specifier: PRIVATE
  368                 | PROTECTED
  369                 | PUBLIC

  370 conversion_function_id: OPERATOR conversion_type_id

  371 conversion_type_id: type_specifier_seq conversion_declarator_opt

  372 conversion_declarator: ptr_operator conversion_declarator_opt

  373 ctor_initializer: ':' mem_initializer_list

  374 mem_initializer_list: mem_initializer
  375                     | mem_initializer ',' mem_initializer_list

  376 mem_initializer: mem_initializer_id '(' expression_list_opt ')'

  377 mem_initializer_id: COLONCOLON nested_name_specifier class_name
  378                   | COLONCOLON class_name
  379                   | nested_name_specifier class_name
  380                   | class_name
  381                   | identifier

  382 operator_function_id: OPERATOR operator

  383 operator: NEW
  384         | DELETE
  385         | NEW '[' ']'
  386         | DELETE '[' ']'
  387         | '+'
  388         | '_'
  389         | '*'
  390         | '/'
  391         | '%'
  392         | '^'
  393         | '&'
  394         | '|'
  395         | '~'
  396         | '!'
  397         | '='
  398         | '<'
  399         | '>'
  400         | ADDEQ
  401         | SUBEQ
  402         | MULEQ
  403         | DIVEQ
  404         | MODEQ
  405         | XOREQ
  406         | ANDEQ
  407         | OREQ
  408         | SL
  409         | SR
  410         | SREQ
  411         | SLEQ
  412         | EQ
  413         | NOTEQ
  414         | LTEQ
  415         | GTEQ
  416         | ANDAND
  417         | OROR
  418         | PLUSPLUS
  419         | MINUSMINUS
  420         | ','
  421         | ARROWSTAR
  422         | ARROW
  423         | '(' ')'
  424         | '[' ']'

  425 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration

  426 template_parameter_list: template_parameter
  427                        | template_parameter_list ',' template_parameter

  428 template_parameter: type_parameter
  429                   | parameter_declaration

  430 type_parameter: CLASS identifier
  431               | CLASS identifier '=' type_id
  432               | TYPENAME identifier
  433               | TYPENAME identifier '=' type_id
  434               | TEMPLATE '<' template_parameter_list '>' CLASS identifier
  435               | TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name

  436 template_id: template_name '<' template_argument_list '>'

  437 template_argument_list: template_argument
  438                       | template_argument_list ',' template_argument

  439 template_argument: assignment_expression
  440                  | type_id
  441                  | template_name

  442 explicit_instantiation: TEMPLATE declaration

  443 explicit_specialization: TEMPLATE '<' '>' declaration

  444 try_block: TRY compound_statement handler_seq

  445 function_try_block: TRY ctor_initializer_opt function_body handler_seq

  446 handler_seq: handler handler_seq_opt

  447 handler: CATCH '(' exception_declaration ')' compound_statement

  448 exception_declaration: type_specifier_seq declarator
  449                      | type_specifier_seq abstract_declarator
  450                      | type_specifier_seq
  451                      | ELLIPSIS

  452 throw_expression: THROW assignment_expression_opt

  453 exception_specification: THROW '(' type_id_list_opt ')'

  454 type_id_list: type_id
  455             | type_id_list ',' type_id

  456 declaration_seq_opt: %empty
  457                    | declaration_seq

  458 nested_name_specifier_opt: %empty
  459                          | nested_name_specifier

  460 expression_list_opt: %empty
  461                    | expression_list

  462 COLONCOLON_opt: %empty
  463               | COLONCOLON

  464 new_placement_opt: %empty
  465                  | new_placement

  466 new_initializer_opt: %empty
  467                    | new_initializer

  468 new_declarator_opt: %empty
  469                   | new_declarator

  470 expression_opt: %empty
  471               | expression

  472 statement_seq_opt: %empty
  473                  | statement_seq

  474 condition_opt: %empty
  475              | condition

  476 enumerator_list_opt: %empty
  477                    | enumerator_list

  478 initializer_opt: %empty
  479                | initializer

  480 constant_expression_opt: %empty
  481                        | constant_expression

  482 abstract_declarator_opt: %empty
  483                        | abstract_declarator

  484 type_specifier_seq_opt: %empty
  485                       | type_specifier_seq

  486 direct_abstract_declarator_opt: %empty
  487                               | direct_abstract_declarator

  488 ctor_initializer_opt: %empty
  489                     | ctor_initializer

  490 COMMA_opt: %empty
  491          | ','

  492 member_specification_opt: %empty
  493                         | member_specification

  494 SEMICOLON_opt: %empty
  495              | ';'

  496 conversion_declarator_opt: %empty
  497                          | conversion_declarator

  498 EXPORT_opt: %empty
  499           | EXPORT

  500 handler_seq_opt: %empty
  501                | handler_seq

  502 assignment_expression_opt: %empty
  503                          | assignment_expression

  504 type_id_list_opt: %empty
  505                 | type_id_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 74 396
'%' (37) 99 391
'&' (38) 66 115 281 393
'(' (40) 23 39 40 41 42 43 54 55 56 57 58 59 69 78 79 80 86 92 158
    159 160 163 164 165 261 270 271 272 273 274 275 276 278 297 298
    299 300 302 320 376 423 447 453
')' (41) 23 39 40 41 42 43 54 55 56 57 58 59 69 78 79 80 86 92 158
    159 160 163 164 165 261 270 271 272 273 274 275 276 278 297 298
    299 300 302 320 376 423 447 453
'*' (42) 65 97 279 280 282 283 284 389
'+' (43) 72 101 387
',' (44) 61 141 235 265 307 309 325 345 354 375 420 427 438 455 491
'-' (45) 73 102
'.' (46) 44 45 46 47
'/' (47) 98 390
'0' (48) 350
':' (58) 125 151 152 153 335 349 352 373
';' (59) 154 164 165 168 169 170 171 187 188 247 252 253 254 255 256
    257 258 259 260 261 336 337 338 339 341 495
'<' (60) 54 55 56 57 107 232 398 425 434 435 436 443
'=' (61) 129 162 237 247 311 313 319 350 351 397 431 433 435
'>' (62) 54 55 56 57 108 232 399 425 434 435 436 443
'?' (63) 125
'[' (91) 38 84 85 89 90 277 301 385 386 424
']' (93) 38 84 85 89 90 277 301 385 386 424
'^' (94) 117 392
'_' (95) 388
'{' (123) 155 233 243 244 245 262 322 323 326
'|' (124) 119 394
'}' (125) 155 233 243 244 245 262 322 323 326
'~' (126) 30 75 395
error (256)
IDENTIFIER (258) 8
INTEGER (259) 14
FLOATING (260) 16
CHARACTER (261) 15
STRING (262) 17
TYPEDEF_NAME (263) 1
NAMESPACE_NAME (264) 3
CLASS_NAME (265) 4 274 275 276
ENUM_NAME (266) 6
TEMPLATE_NAME (267) 7
ELLIPSIS (268) 303 305 307 451
COLONCOLON (269) 33 34 35 36 44 46 48 50 77 79 88 90 211 226 227 228
    229 248 249 252 254 256 257 258 275 276 284 290 291 292 355 356
    359 361 363 365 377 378 463
DOTSTAR (270) 94
ADDEQ (271) 133 400
SUBEQ (272) 134 401
MULEQ (273) 130 402
DIVEQ (274) 131 403
MODEQ (275) 132 404
XOREQ (276) 138 405
ANDEQ (277) 137 406
OREQ (278) 139 407
SL (279) 104 408
SR (280) 105 409
SREQ (281) 135 410
SLEQ (282) 136 411
EQ (283) 112 412
NOTEQ (284) 113 413
LTEQ (285) 109 414
GTEQ (286) 110 415
ANDAND (287) 121 416
OROR (288) 123 417
PLUSPLUS (289) 52 63 418
MINUSMINUS (290) 53 64 419
ARROWSTAR (291) 95 421
ARROW (292) 48 49 50 51 422
ASM (293) 261
AUTO (294) 196
BOOL (295) 43 214
BREAK (296) 168
CASE (297) 152
CATCH (298) 447
CHAR (299) 42 212
CLASS (300) 331 430 431 434 435
CONST (301) 287
CONST_CAST (302) 57
CONTINUE (303) 169
DEFAULT (304) 153
DELETE (305) 87 88 89 90 384 386
DO (306) 164
DOUBLE (307) 40 221
DYNAMIC_CAST (308) 54
ELSE (309) 159
ENUM (310) 228 229 230 233
EXPLICIT (311) 203
EXPORT (312) 499
EXTERN (313) 199 262 263
FALSE (314) 19
FLOAT (315) 220
FOR (316) 165
FRIEND (317) 192
GOTO (318) 171
IF (319) 158 159
INLINE (320) 201
INT (321) 41 216
LONG (322) 217
MUTABLE (323) 200
NAMESPACE (324) 243 244 245 247 257 258 259 260
NEW (325) 76 77 78 79 383 385
OPERATOR (326) 370 382
PRIVATE (327) 367
PROTECTED (328) 368
PUBLIC (329) 369
REGISTER (330) 197
REINTERPRET_CAST (331) 56
RETURN (332) 170
SHORT (333) 215
SIGNED (334) 218
SIZEOF (335) 68 69
STATIC (336) 198
STATIC_CAST (337) 55
STRUCT (338) 332
SWITCH (339) 160
TEMPLATE (340) 32 44 45 48 49 425 434 435 442 443
THIS (341) 22
THROW (342) 452 453
TRUE (343) 18
TRY (344) 444 445
TYPEDEF (345) 193
TYPEID (346) 58 59
TYPENAME (347) 231 232 252 253 432 433
UNION (348) 333
UNSIGNED (349) 219
USING (350) 252 253 254 255 256 257 258 259 260
VIRTUAL (351) 202 359 360 361 362 363 364
VOID (352) 222
VOLATILE (353) 288
WCHAR_T (354) 213
WHILE (355) 163 164


Nonterminals, with rules where they appear

$accept (127)
    on left: 0
typedef_name (128)
    on left: 1, on right: 225
namespace_name (129)
    on left: 2, on right: 34 36 248 249 250 251 257 258 259 260
original_namespace_name (130)
    on left: 3, on right: 2 244
class_name (131)
    on left: 4 5, on right: 30 33 35 223 355 356 357 358 359 360 361
    362 363 364 365 366 377 378 379 380
enum_name (132)
    on left: 6, on right: 224
template_name (133)
    on left: 7, on right: 435 436 441
identifier (134)
    on left: 8, on right: 27 151 171 226 227 228 229 230 231 232 233
    238 243 247 328 329 330 349 381 430 431 432 433 434 435
literal (135)
    on left: 9 10 11 12 13, on right: 21
integer_literal (136)
    on left: 14, on right: 9
character_literal (137)
    on left: 15, on right: 10
floating_literal (138)
    on left: 16, on right: 11
string_literal (139)
    on left: 17, on right: 12 261 262 263
boolean_literal (140)
    on left: 18 19, on right: 13
translation_unit (141)
    on left: 20, on right: 0
primary_expression (142)
    on left: 21 22 23 24, on right: 37
id_expression (143)
    on left: 25 26, on right: 24 44 45 46 47 48 49 50 51 289 290
unqualified_id (144)
    on left: 27 28 29 30, on right: 25 31 32 252 253 254 255 256
qualified_id (145)
    on left: 31 32, on right: 26 341
nested_name_specifier (146)
    on left: 33 34 35 36, on right: 31 32 33 34 210 226 228 230 231
    232 248 250 252 253 254 255 257 259 282 283 284 291 329 330 355
    357 377 379 459
postfix_expression (147)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58 59, on right: 38 39 44 45 46 47 48 49 50 51 52 53 62
expression_list (148)
    on left: 60 61, on right: 61 80 320 461
unary_expression (149)
    on left: 62 63 64 65 66 67 68 69 70 71, on right: 68 91
unary_operator (150)
    on left: 72 73 74 75, on right: 67
new_expression (151)
    on left: 76 77 78 79, on right: 70
new_placement (152)
    on left: 80, on right: 465
new_type_id (153)
    on left: 81, on right: 76 77
new_declarator (154)
    on left: 82 83, on right: 469
direct_new_declarator (155)
    on left: 84 85, on right: 83 85
new_initializer (156)
    on left: 86, on right: 467
delete_expression (157)
    on left: 87 88 89 90, on right: 71
cast_expression (158)
    on left: 91 92, on right: 63 64 65 66 67 87 88 89 90 92 93 94 95
pm_expression (159)
    on left: 93 94 95, on right: 94 95 96 97 98 99
multiplicative_expression (160)
    on left: 96 97 98 99, on right: 97 98 99 100 101 102
additive_expression (161)
    on left: 100 101 102, on right: 101 102 103 104 105
shift_expression (162)
    on left: 103 104 105, on right: 104 105 106 107 108 109 110
relational_expression (163)
    on left: 106 107 108 109 110, on right: 107 108 109 110 111 112
    113
equality_expression (164)
    on left: 111 112 113, on right: 112 113 114 115
and_expression (165)
    on left: 114 115, on right: 115 116 117
exclusive_or_expression (166)
    on left: 116 117, on right: 117 118 119
inclusive_or_expression (167)
    on left: 118 119, on right: 119 120 121
logical_and_expression (168)
    on left: 120 121, on right: 121 122 123
logical_or_expression (169)
    on left: 122 123, on right: 123 124 125 127
conditional_expression (170)
    on left: 124 125, on right: 126 142
assignment_expression (171)
    on left: 126 127 128, on right: 60 61 125 127 140 141 162 311 313
    321 439 503
assignment_operator (172)
    on left: 129 130 131 132 133 134 135 136 137 138 139, on right:
    127
expression (173)
    on left: 140 141, on right: 23 38 54 55 56 57 58 84 125 141 161
    164 471
constant_expression (174)
    on left: 142, on right: 85 152 237 349 351 481
statement (175)
    on left: 143 144 145 146 147 148 149 150, on right: 151 152 153
    156 157 158 159 160 163 164 165
labeled_statement (176)
    on left: 151 152 153, on right: 143
expression_statement (177)
    on left: 154, on right: 144 166
compound_statement (178)
    on left: 155, on right: 145 318 444 447
statement_seq (179)
    on left: 156 157, on right: 157 473
selection_statement (180)
    on left: 158 159 160, on right: 146
condition (181)
    on left: 161 162, on right: 158 159 160 163 475
iteration_statement (182)
    on left: 163 164 165, on right: 147
for_init_statement (183)
    on left: 166 167, on right: 165
jump_statement (184)
    on left: 168 169 170 171, on right: 148
declaration_statement (185)
    on left: 172, on right: 149
declaration_seq (186)
    on left: 173 174, on right: 174 457
declaration (187)
    on left: 175 176 177 178 179 180 181, on right: 173 174 263 425
    442 443
block_declaration (188)
    on left: 182 183 184 185 186, on right: 172 175
simple_declaration (189)
    on left: 187 188, on right: 167 182
decl_specifier (190)
    on left: 189 190 191 192 193, on right: 194 195
decl_specifier_seq (191)
    on left: 194 195, on right: 187 188 195 310 311 312 313 315 317
    336 337
storage_class_specifier (192)
    on left: 196 197 198 199 200, on right: 189
function_specifier (193)
    on left: 201 202 203, on right: 191
type_specifier (194)
    on left: 204 205 206 207 208, on right: 190 294
simple_type_specifier (195)
    on left: 209 210 211 212 213 214 215 216 217 218 219 220 221 222,
    on right: 204
type_name (196)
    on left: 223 224 225, on right: 209 210 211 291 292
elaborated_type_specifier (197)
    on left: 226 227 228 229 230 231 232, on right: 207
enum_specifier (198)
    on left: 233, on right: 206
enumerator_list (199)
    on left: 234 235, on right: 235 477
enumerator_definition (200)
    on left: 236 237, on right: 234 235
enumerator (201)
    on left: 238, on right: 236 237
namespace_definition (202)
    on left: 239 240, on right: 181
named_namespace_definition (203)
    on left: 241 242, on right: 239
original_namespace_definition (204)
    on left: 243, on right: 241
extension_namespace_definition (205)
    on left: 244, on right: 242
unnamed_namespace_definition (206)
    on left: 245, on right: 240
namespace_body (207)
    on left: 246, on right: 243 244 245
namespace_alias_definition (208)
    on left: 247, on right: 184
qualified_namespace_specifier (209)
    on left: 248 249 250 251, on right: 247
using_declaration (210)
    on left: 252 253 254 255 256, on right: 185 342
using_directive (211)
    on left: 257 258 259 260, on right: 186
asm_definition (212)
    on left: 261, on right: 183
linkage_specification (213)
    on left: 262 263, on right: 180
init_declarator_list (214)
    on left: 264 265, on right: 187 265
init_declarator (215)
    on left: 266, on right: 264 265
declarator (216)
    on left: 267 268, on right: 162 266 268 278 310 311 314 315 316
    317 346 347 348 448
direct_declarator (217)
    on left: 269 270 271 272 273 274 275 276 277 278, on right: 267
    270 271 272 273 277
ptr_operator (218)
    on left: 279 280 281 282 283 284, on right: 82 268 295 372
cv_qualifier_seq (219)
    on left: 285 286, on right: 270 271 280 283 286 297 298
cv_qualifier (220)
    on left: 287 288, on right: 208 285 286
declarator_id (221)
    on left: 289 290 291 292, on right: 269 275
type_id (222)
    on left: 293, on right: 54 55 56 57 59 69 78 79 92 431 433 440
    454 455
type_specifier_seq (223)
    on left: 294, on right: 81 162 293 371 448 449 450 485
abstract_declarator (224)
    on left: 295 296, on right: 302 449 483
direct_abstract_declarator (225)
    on left: 297 298 299 300 301 302, on right: 296 487
parameter_declaration_clause (226)
    on left: 303 304 305 306 307, on right: 270 271 272 273 274 275
    276 297 298 299 300
parameter_declaration_list (227)
    on left: 308 309, on right: 303 304 307 309
parameter_declaration (228)
    on left: 310 311 312 313, on right: 308 309 429
function_definition (229)
    on left: 314 315 316 317, on right: 176 340
function_body (230)
    on left: 318, on right: 314 315 445
initializer (231)
    on left: 319 320, on right: 479
initializer_clause (232)
    on left: 321 322 323, on right: 319 324 325
initializer_list (233)
    on left: 324 325, on right: 322 325
class_specifier (234)
    on left: 326, on right: 205
class_head (235)
    on left: 327 328 329 330, on right: 326
class_key (236)
    on left: 331 332 333, on right: 226 227 328 329 330
member_specification (237)
    on left: 334 335, on right: 493
member_declaration (238)
    on left: 336 337 338 339 340 341 342 343, on right: 334
member_declarator_list (239)
    on left: 344 345, on right: 336 338 345
member_declarator (240)
    on left: 346 347 348 349, on right: 344 345
pure_specifier (241)
    on left: 350, on right: 347
constant_initializer (242)
    on left: 351, on right: 348
base_clause (243)
    on left: 352, on right: 328 330
base_specifier_list (244)
    on left: 353 354, on right: 352 354
base_specifier (245)
    on left: 355 356 357 358 359 360 361 362 363 364 365 366, on right:
    353 354
access_specifier (246)
    on left: 367 368 369, on right: 335 359 360 363 364 365 366
conversion_function_id (247)
    on left: 370, on right: 29
conversion_type_id (248)
    on left: 371, on right: 370
conversion_declarator (249)
    on left: 372, on right: 497
ctor_initializer (250)
    on left: 373, on right: 489
mem_initializer_list (251)
    on left: 374 375, on right: 373 375
mem_initializer (252)
    on left: 376, on right: 374 375
mem_initializer_id (253)
    on left: 377 378 379 380 381, on right: 376
operator_function_id (254)
    on left: 382, on right: 28
operator (255)
    on left: 383 384 385 386 387 388 389 390 391 392 393 394 395 396
    397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412
    413 414 415 416 417 418 419 420 421 422 423 424, on right: 382
template_declaration (256)
    on left: 425, on right: 177 343
template_parameter_list (257)
    on left: 426 427, on right: 425 427 434 435
template_parameter (258)
    on left: 428 429, on right: 426 427
type_parameter (259)
    on left: 430 431 432 433 434 435, on right: 428
template_id (260)
    on left: 436, on right: 5
template_argument_list (261)
    on left: 437 438, on right: 232 436 438
template_argument (262)
    on left: 439 440 441, on right: 437 438
explicit_instantiation (263)
    on left: 442, on right: 178
explicit_specialization (264)
    on left: 443, on right: 179
try_block (265)
    on left: 444, on right: 150
function_try_block (266)
    on left: 445, on right: 316 317
handler_seq (267)
    on left: 446, on right: 444 445 501
handler (268)
    on left: 447, on right: 446
exception_declaration (269)
    on left: 448 449 450 451, on right: 447
throw_expression (270)
    on left: 452, on right: 128
exception_specification (271)
    on left: 453, on right: 270 272 297 299
type_id_list (272)
    on left: 454 455, on right: 455 505
declaration_seq_opt (273)
    on left: 456 457, on right: 20 246 262
nested_name_specifier_opt (274)
    on left: 458 459, on right: 211 359 360 361 362 363 364 365 366
expression_list_opt (275)
    on left: 460 461, on right: 39 40 41 42 43 86 376
COLONCOLON_opt (276)
    on left: 462 463, on right: 231 232
new_placement_opt (277)
    on left: 464 465, on right: 76 77 78 79
new_initializer_opt (278)
    on left: 466 467, on right: 76 77 78 79
new_declarator_opt (279)
    on left: 468 469, on right: 81 82
expression_opt (280)
    on left: 470 471, on right: 154 165 170
statement_seq_opt (281)
    on left: 472 473, on right: 155
condition_opt (282)
    on left: 474 475, on right: 165
enumerator_list_opt (283)
    on left: 476 477, on right: 233
initializer_opt (284)
    on left: 478 479, on right: 266
constant_expression_opt (285)
    on left: 480 481, on right: 277 301
abstract_declarator_opt (286)
    on left: 482 483, on right: 293 295 312 313
type_specifier_seq_opt (287)
    on left: 484 485, on right: 294
direct_abstract_declarator_opt (288)
    on left: 486 487, on right: 297 298 299 300 301
ctor_initializer_opt (289)
    on left: 488 489, on right: 314 315 445
COMMA_opt (290)
    on left: 490 491, on right: 322
member_specification_opt (291)
    on left: 492 493, on right: 326 334 335
SEMICOLON_opt (292)
    on left: 494 495, on right: 340
conversion_declarator_opt (293)
    on left: 496 497, on right: 371 372
EXPORT_opt (294)
    on left: 498 499, on right: 425
handler_seq_opt (295)
    on left: 500 501, on right: 446
assignment_expression_opt (296)
    on left: 502 503, on right: 452
type_id_list_opt (297)
    on left: 504 505, on right: 453


State 0

    0 $accept: . translation_unit $end

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    $end      reduce using rule 456 (declaration_seq_opt)
    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    $default  reduce using rule 327 (class_head)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    translation_unit                go to state 53
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 96
    EXPORT_opt                      go to state 97


State 1

    8 identifier: IDENTIFIER .

    $default  reduce using rule 8 (identifier)


State 2

    1 typedef_name: TYPEDEF_NAME .

    $default  reduce using rule 1 (typedef_name)


State 3

    3 original_namespace_name: NAMESPACE_NAME .

    $default  reduce using rule 3 (original_namespace_name)


State 4

    4 class_name: CLASS_NAME .
  274 direct_declarator: CLASS_NAME . '(' parameter_declaration_clause ')'
  275                  | CLASS_NAME . COLONCOLON declarator_id '(' parameter_declaration_clause ')'
  276                  | CLASS_NAME . COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')'

    COLONCOLON  shift, and go to state 98
    '('         shift, and go to state 99

    COLONCOLON  [reduce using rule 4 (class_name)]
    '('         [reduce using rule 4 (class_name)]
    $default    reduce using rule 4 (class_name)


State 5

    6 enum_name: ENUM_NAME .

    $default  reduce using rule 6 (enum_name)


State 6

    7 template_name: TEMPLATE_NAME .

    $default  reduce using rule 7 (template_name)


State 7

  211 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name
  284 ptr_operator: COLONCOLON . nested_name_specifier '*'
  290 declarator_id: COLONCOLON . id_expression
  291              | COLONCOLON . nested_name_specifier type_name
  292              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    TYPEDEF_NAME   [reduce using rule 458 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 101
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 102
    type_name                  go to state 103
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    nested_name_specifier_opt  go to state 104


State 8

  261 asm_definition: ASM . '(' string_literal ')' ';'

    '('  shift, and go to state 105


State 9

  196 storage_class_specifier: AUTO .

    $default  reduce using rule 196 (storage_class_specifier)


State 10

  214 simple_type_specifier: BOOL .

    $default  reduce using rule 214 (simple_type_specifier)


State 11

  212 simple_type_specifier: CHAR .

    $default  reduce using rule 212 (simple_type_specifier)


State 12

  331 class_key: CLASS .

    $default  reduce using rule 331 (class_key)


State 13

  287 cv_qualifier: CONST .

    $default  reduce using rule 287 (cv_qualifier)


State 14

  221 simple_type_specifier: DOUBLE .

    $default  reduce using rule 221 (simple_type_specifier)


State 15

  228 elaborated_type_specifier: ENUM . COLONCOLON nested_name_specifier identifier
  229                          | ENUM . COLONCOLON identifier
  230                          | ENUM . nested_name_specifier identifier
  233 enum_specifier: ENUM . identifier '{' enumerator_list_opt '}'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 106

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 108
    nested_name_specifier    go to state 109
    template_id              go to state 93


State 16

  203 function_specifier: EXPLICIT .

    $default  reduce using rule 203 (function_specifier)


State 17

  499 EXPORT_opt: EXPORT .

    $default  reduce using rule 499 (EXPORT_opt)


State 18

  199 storage_class_specifier: EXTERN .
  262 linkage_specification: EXTERN . string_literal '{' declaration_seq_opt '}'
  263                      | EXTERN . string_literal declaration

    STRING  shift, and go to state 110

    $default  reduce using rule 199 (storage_class_specifier)

    string_literal  go to state 111


State 19

  220 simple_type_specifier: FLOAT .

    $default  reduce using rule 220 (simple_type_specifier)


State 20

  192 decl_specifier: FRIEND .

    $default  reduce using rule 192 (decl_specifier)


State 21

  201 function_specifier: INLINE .

    $default  reduce using rule 201 (function_specifier)


State 22

  216 simple_type_specifier: INT .

    $default  reduce using rule 216 (simple_type_specifier)


State 23

  217 simple_type_specifier: LONG .

    $default  reduce using rule 217 (simple_type_specifier)


State 24

  200 storage_class_specifier: MUTABLE .

    $default  reduce using rule 200 (storage_class_specifier)


State 25

  243 original_namespace_definition: NAMESPACE . identifier '{' namespace_body '}'
  244 extension_namespace_definition: NAMESPACE . original_namespace_name '{' namespace_body '}'
  245 unnamed_namespace_definition: NAMESPACE . '{' namespace_body '}'
  247 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    '{'             shift, and go to state 112

    original_namespace_name  go to state 113
    identifier               go to state 114


State 26

  370 conversion_function_id: OPERATOR . conversion_type_id
  382 operator_function_id: OPERATOR . operator

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    ADDEQ           shift, and go to state 116
    SUBEQ           shift, and go to state 117
    MULEQ           shift, and go to state 118
    DIVEQ           shift, and go to state 119
    MODEQ           shift, and go to state 120
    XOREQ           shift, and go to state 121
    ANDEQ           shift, and go to state 122
    OREQ            shift, and go to state 123
    SL              shift, and go to state 124
    SR              shift, and go to state 125
    SREQ            shift, and go to state 126
    SLEQ            shift, and go to state 127
    EQ              shift, and go to state 128
    NOTEQ           shift, and go to state 129
    LTEQ            shift, and go to state 130
    GTEQ            shift, and go to state 131
    ANDAND          shift, and go to state 132
    OROR            shift, and go to state 133
    PLUSPLUS        shift, and go to state 134
    MINUSMINUS      shift, and go to state 135
    ARROWSTAR       shift, and go to state 136
    ARROW           shift, and go to state 137
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DELETE          shift, and go to state 138
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    NEW             shift, and go to state 139
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 140
    '~'             shift, and go to state 141
    '['             shift, and go to state 142
    '<'             shift, and go to state 143
    '>'             shift, and go to state 144
    ','             shift, and go to state 145
    '*'             shift, and go to state 146
    '&'             shift, and go to state 147
    '+'             shift, and go to state 148
    '!'             shift, and go to state 149
    '/'             shift, and go to state 150
    '%'             shift, and go to state 151
    '^'             shift, and go to state 152
    '|'             shift, and go to state 153
    '='             shift, and go to state 154
    '_'             shift, and go to state 155

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 158
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_type_id         go to state 159
    operator                   go to state 160
    template_id                go to state 93


State 27

  197 storage_class_specifier: REGISTER .

    $default  reduce using rule 197 (storage_class_specifier)


State 28

  215 simple_type_specifier: SHORT .

    $default  reduce using rule 215 (simple_type_specifier)


State 29

  218 simple_type_specifier: SIGNED .

    $default  reduce using rule 218 (simple_type_specifier)


State 30

  198 storage_class_specifier: STATIC .

    $default  reduce using rule 198 (storage_class_specifier)


State 31

  332 class_key: STRUCT .

    $default  reduce using rule 332 (class_key)


State 32

  442 explicit_instantiation: TEMPLATE . declaration
  443 explicit_specialization: TEMPLATE . '<' '>' declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '<'             shift, and go to state 161
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    $default  reduce using rule 327 (class_head)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 162
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 33

  193 decl_specifier: TYPEDEF .

    $default  reduce using rule 193 (decl_specifier)


State 34

  231 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  232                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

    COLONCOLON  shift, and go to state 163

    $default  reduce using rule 462 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 164


State 35

  333 class_key: UNION .

    $default  reduce using rule 333 (class_key)


State 36

  219 simple_type_specifier: UNSIGNED .

    $default  reduce using rule 219 (simple_type_specifier)


State 37

  252 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  253                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  254                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  255                  | USING . nested_name_specifier unqualified_id ';'
  256                  | USING . COLONCOLON unqualified_id ';'
  257 using_directive: USING . NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  258                | USING . NAMESPACE COLONCOLON namespace_name ';'
  259                | USING . NAMESPACE nested_name_specifier namespace_name ';'
  260                | USING . NAMESPACE namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 165
    NAMESPACE       shift, and go to state 166
    TYPENAME        shift, and go to state 167

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 168
    template_id              go to state 93


State 38

  202 function_specifier: VIRTUAL .

    $default  reduce using rule 202 (function_specifier)


State 39

  222 simple_type_specifier: VOID .

    $default  reduce using rule 222 (simple_type_specifier)


State 40

  288 cv_qualifier: VOLATILE .

    $default  reduce using rule 288 (cv_qualifier)


State 41

  213 simple_type_specifier: WCHAR_T .

    $default  reduce using rule 213 (simple_type_specifier)


State 42

  278 direct_declarator: '(' . declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 171
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 43

   30 unqualified_id: '~' . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 172
    template_name  go to state 51
    template_id    go to state 93


State 44

  279 ptr_operator: '*' .
  280             | '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 279 (ptr_operator)

    cv_qualifier_seq  go to state 173
    cv_qualifier      go to state 174


State 45

  281 ptr_operator: '&' .

    $default  reduce using rule 281 (ptr_operator)


State 46

  225 type_name: typedef_name .

    $default  reduce using rule 225 (type_name)


State 47

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON

    COLONCOLON  shift, and go to state 175


State 48

    2 namespace_name: original_namespace_name .

    $default  reduce using rule 2 (namespace_name)


State 49

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  223 type_name: class_name .

    COLONCOLON  shift, and go to state 176

    COLONCOLON  [reduce using rule 223 (type_name)]
    $default    reduce using rule 223 (type_name)


State 50

  224 type_name: enum_name .

    $default  reduce using rule 224 (type_name)


State 51

  436 template_id: template_name . '<' template_argument_list '>'

    '<'  shift, and go to state 177


State 52

   27 unqualified_id: identifier .

    $default  reduce using rule 27 (unqualified_id)


State 53

    0 $accept: translation_unit . $end

    $end  shift, and go to state 178


State 54

  289 declarator_id: id_expression .

    $default  reduce using rule 289 (declarator_id)


State 55

   25 id_expression: unqualified_id .

    $default  reduce using rule 25 (id_expression)


State 56

   26 id_expression: qualified_id .

    $default  reduce using rule 26 (id_expression)


State 57

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  210 simple_type_specifier: nested_name_specifier . type_name
  282 ptr_operator: nested_name_specifier . '*'
  283             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43
    '*'            shift, and go to state 180

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 183
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 58

  174 declaration_seq: declaration_seq . declaration
  457 declaration_seq_opt: declaration_seq .

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    '{'       reduce using rule 327 (class_head)
    $default  reduce using rule 457 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 184
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 59

  173 declaration_seq: declaration .

    $default  reduce using rule 173 (declaration_seq)


State 60

  175 declaration: block_declaration .

    $default  reduce using rule 175 (declaration)


State 61

  182 block_declaration: simple_declaration .

    $default  reduce using rule 182 (block_declaration)


State 62

  194 decl_specifier_seq: decl_specifier .

    $default  reduce using rule 194 (decl_specifier_seq)


State 63

  187 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  188                   | decl_specifier_seq . ';'
  195 decl_specifier_seq: decl_specifier_seq . decl_specifier
  315 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  317                    | decl_specifier_seq . declarator function_try_block

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 186

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 187
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    init_declarator_list       go to state 188
    init_declarator            go to state 189
    declarator                 go to state 190
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 64

  189 decl_specifier: storage_class_specifier .

    $default  reduce using rule 189 (decl_specifier)


State 65

  191 decl_specifier: function_specifier .

    $default  reduce using rule 191 (decl_specifier)


State 66

  190 decl_specifier: type_specifier .

    $default  reduce using rule 190 (decl_specifier)


State 67

  204 type_specifier: simple_type_specifier .

    $default  reduce using rule 204 (type_specifier)


State 68

  209 simple_type_specifier: type_name .

    $default  reduce using rule 209 (simple_type_specifier)


State 69

  207 type_specifier: elaborated_type_specifier .

    $default  reduce using rule 207 (type_specifier)


State 70

  206 type_specifier: enum_specifier .

    $default  reduce using rule 206 (type_specifier)


State 71

  181 declaration: namespace_definition .

    $default  reduce using rule 181 (declaration)


State 72

  239 namespace_definition: named_namespace_definition .

    $default  reduce using rule 239 (namespace_definition)


State 73

  241 named_namespace_definition: original_namespace_definition .

    $default  reduce using rule 241 (named_namespace_definition)


State 74

  242 named_namespace_definition: extension_namespace_definition .

    $default  reduce using rule 242 (named_namespace_definition)


State 75

  240 namespace_definition: unnamed_namespace_definition .

    $default  reduce using rule 240 (namespace_definition)


State 76

  184 block_declaration: namespace_alias_definition .

    $default  reduce using rule 184 (block_declaration)


State 77

  185 block_declaration: using_declaration .

    $default  reduce using rule 185 (block_declaration)


State 78

  186 block_declaration: using_directive .

    $default  reduce using rule 186 (block_declaration)


State 79

  183 block_declaration: asm_definition .

    $default  reduce using rule 183 (block_declaration)


State 80

  180 declaration: linkage_specification .

    $default  reduce using rule 180 (declaration)


State 81

  314 function_definition: declarator . ctor_initializer_opt function_body
  316                    | declarator . function_try_block

    TRY  shift, and go to state 191
    ':'  shift, and go to state 192

    $default  reduce using rule 488 (ctor_initializer_opt)

    ctor_initializer      go to state 193
    function_try_block    go to state 194
    ctor_initializer_opt  go to state 195


State 82

  267 declarator: direct_declarator .
  270 direct_declarator: direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  271                  | direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq
  272                  | direct_declarator . '(' parameter_declaration_clause ')' exception_specification
  273                  | direct_declarator . '(' parameter_declaration_clause ')'
  277                  | direct_declarator . '[' constant_expression_opt ']'

    '('  shift, and go to state 196
    '['  shift, and go to state 197

    '('       [reduce using rule 267 (declarator)]
    $default  reduce using rule 267 (declarator)


State 83

  268 declarator: ptr_operator . declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 198
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 84

  208 type_specifier: cv_qualifier .

    $default  reduce using rule 208 (type_specifier)


State 85

  269 direct_declarator: declarator_id .

    $default  reduce using rule 269 (direct_declarator)


State 86

  176 declaration: function_definition .

    $default  reduce using rule 176 (declaration)


State 87

  205 type_specifier: class_specifier .

    $default  reduce using rule 205 (type_specifier)


State 88

  326 class_specifier: class_head . '{' member_specification_opt '}'

    '{'  shift, and go to state 199


State 89

  226 elaborated_type_specifier: class_key . COLONCOLON nested_name_specifier identifier
  227                          | class_key . COLONCOLON identifier
  328 class_head: class_key . identifier base_clause
  329           | class_key . nested_name_specifier identifier
  330           | class_key . nested_name_specifier identifier base_clause

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 200

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 201
    nested_name_specifier    go to state 202
    template_id              go to state 93


State 90

   29 unqualified_id: conversion_function_id .

    $default  reduce using rule 29 (unqualified_id)


State 91

   28 unqualified_id: operator_function_id .

    $default  reduce using rule 28 (unqualified_id)


State 92

  177 declaration: template_declaration .

    $default  reduce using rule 177 (declaration)


State 93

    5 class_name: template_id .

    $default  reduce using rule 5 (class_name)


State 94

  178 declaration: explicit_instantiation .

    $default  reduce using rule 178 (declaration)


State 95

  179 declaration: explicit_specialization .

    $default  reduce using rule 179 (declaration)


State 96

   20 translation_unit: declaration_seq_opt .

    $default  reduce using rule 20 (translation_unit)


State 97

  425 template_declaration: EXPORT_opt . TEMPLATE '<' template_parameter_list '>' declaration

    TEMPLATE  shift, and go to state 203


State 98

  275 direct_declarator: CLASS_NAME COLONCOLON . declarator_id '(' parameter_declaration_clause ')'
  276                  | CLASS_NAME COLONCOLON . CLASS_NAME '(' parameter_declaration_clause ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 204
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 205
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    declarator_id            go to state 207
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 99

  274 direct_declarator: CLASS_NAME '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    '{'       reduce using rule 327 (class_head)
    $default  reduce using rule 306 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 210
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 100

    4 class_name: CLASS_NAME .

    $default  reduce using rule 4 (class_name)


State 101

  290 declarator_id: COLONCOLON id_expression .

    $default  reduce using rule 290 (declarator_id)


State 102

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  284 ptr_operator: COLONCOLON nested_name_specifier . '*'
  291 declarator_id: COLONCOLON nested_name_specifier . type_name
  459 nested_name_specifier_opt: nested_name_specifier .

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43
    '*'            shift, and go to state 213

    TYPEDEF_NAME   [reduce using rule 459 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 459 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 459 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 459 (nested_name_specifier_opt)]

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 214
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 103

  292 declarator_id: COLONCOLON type_name .

    $default  reduce using rule 292 (declarator_id)


State 104

  211 simple_type_specifier: COLONCOLON nested_name_specifier_opt . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 46
    class_name     go to state 181
    enum_name      go to state 50
    template_name  go to state 51
    type_name      go to state 215
    template_id    go to state 93


State 105

  261 asm_definition: ASM '(' . string_literal ')' ';'

    STRING  shift, and go to state 110

    string_literal  go to state 216


State 106

  228 elaborated_type_specifier: ENUM COLONCOLON . nested_name_specifier identifier
  229                          | ENUM COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 217
    nested_name_specifier    go to state 218
    template_id              go to state 93


State 107

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON

    COLONCOLON  shift, and go to state 176


State 108

  233 enum_specifier: ENUM identifier . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 219


State 109

  230 elaborated_type_specifier: ENUM nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 220


State 110

   17 string_literal: STRING .

    $default  reduce using rule 17 (string_literal)


State 111

  262 linkage_specification: EXTERN string_literal . '{' declaration_seq_opt '}'
  263                      | EXTERN string_literal . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    '{'             shift, and go to state 221

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    '{'       [reduce using rule 327 (class_head)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 222
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 112

  245 unnamed_namespace_definition: NAMESPACE '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    '}'       reduce using rule 456 (declaration_seq_opt)
    $default  reduce using rule 327 (class_head)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 223
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 224
    EXPORT_opt                      go to state 97


State 113

  244 extension_namespace_definition: NAMESPACE original_namespace_name . '{' namespace_body '}'

    '{'  shift, and go to state 225


State 114

  243 original_namespace_definition: NAMESPACE identifier . '{' namespace_body '}'
  247 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 226
    '{'  shift, and go to state 227


State 115

  211 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]
    $default       reduce using rule 458 (nested_name_specifier_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 104


State 116

  400 operator: ADDEQ .

    $default  reduce using rule 400 (operator)


State 117

  401 operator: SUBEQ .

    $default  reduce using rule 401 (operator)


State 118

  402 operator: MULEQ .

    $default  reduce using rule 402 (operator)


State 119

  403 operator: DIVEQ .

    $default  reduce using rule 403 (operator)


State 120

  404 operator: MODEQ .

    $default  reduce using rule 404 (operator)


State 121

  405 operator: XOREQ .

    $default  reduce using rule 405 (operator)


State 122

  406 operator: ANDEQ .

    $default  reduce using rule 406 (operator)


State 123

  407 operator: OREQ .

    $default  reduce using rule 407 (operator)


State 124

  408 operator: SL .

    $default  reduce using rule 408 (operator)


State 125

  409 operator: SR .

    $default  reduce using rule 409 (operator)


State 126

  410 operator: SREQ .

    $default  reduce using rule 410 (operator)


State 127

  411 operator: SLEQ .

    $default  reduce using rule 411 (operator)


State 128

  412 operator: EQ .

    $default  reduce using rule 412 (operator)


State 129

  413 operator: NOTEQ .

    $default  reduce using rule 413 (operator)


State 130

  414 operator: LTEQ .

    $default  reduce using rule 414 (operator)


State 131

  415 operator: GTEQ .

    $default  reduce using rule 415 (operator)


State 132

  416 operator: ANDAND .

    $default  reduce using rule 416 (operator)


State 133

  417 operator: OROR .

    $default  reduce using rule 417 (operator)


State 134

  418 operator: PLUSPLUS .

    $default  reduce using rule 418 (operator)


State 135

  419 operator: MINUSMINUS .

    $default  reduce using rule 419 (operator)


State 136

  421 operator: ARROWSTAR .

    $default  reduce using rule 421 (operator)


State 137

  422 operator: ARROW .

    $default  reduce using rule 422 (operator)


State 138

  384 operator: DELETE .
  386         | DELETE . '[' ']'

    '['  shift, and go to state 229

    '['       [reduce using rule 384 (operator)]
    $default  reduce using rule 384 (operator)


State 139

  383 operator: NEW .
  385         | NEW . '[' ']'

    '['  shift, and go to state 230

    '['       [reduce using rule 383 (operator)]
    $default  reduce using rule 383 (operator)


State 140

  423 operator: '(' . ')'

    ')'  shift, and go to state 231


State 141

  395 operator: '~' .

    $default  reduce using rule 395 (operator)


State 142

  424 operator: '[' . ']'

    ']'  shift, and go to state 232


State 143

  398 operator: '<' .

    $default  reduce using rule 398 (operator)


State 144

  399 operator: '>' .

    $default  reduce using rule 399 (operator)


State 145

  420 operator: ',' .

    $default  reduce using rule 420 (operator)


State 146

  389 operator: '*' .

    $default  reduce using rule 389 (operator)


State 147

  393 operator: '&' .

    $default  reduce using rule 393 (operator)


State 148

  387 operator: '+' .

    $default  reduce using rule 387 (operator)


State 149

  396 operator: '!' .

    $default  reduce using rule 396 (operator)


State 150

  390 operator: '/' .

    $default  reduce using rule 390 (operator)


State 151

  391 operator: '%' .

    $default  reduce using rule 391 (operator)


State 152

  392 operator: '^' .

    $default  reduce using rule 392 (operator)


State 153

  394 operator: '|' .

    $default  reduce using rule 394 (operator)


State 154

  397 operator: '=' .

    $default  reduce using rule 397 (operator)


State 155

  388 operator: '_' .

    $default  reduce using rule 388 (operator)


State 156

  210 simple_type_specifier: nested_name_specifier . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 46
    class_name     go to state 181
    enum_name      go to state 50
    template_name  go to state 51
    type_name      go to state 183
    template_id    go to state 93


State 157

  294 type_specifier_seq: type_specifier . type_specifier_seq_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    NAMESPACE_NAME  [reduce using rule 484 (type_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 484 (type_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 484 (type_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 484 (type_specifier_seq_opt)]
    '{'             reduce using rule 327 (class_head)
    '{'             [reduce using rule 484 (type_specifier_seq_opt)]
    $default        reduce using rule 484 (type_specifier_seq_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 233
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    type_specifier_seq_opt     go to state 234


State 158

  371 conversion_type_id: type_specifier_seq . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 496 (conversion_declarator_opt)]
    '&'       [reduce using rule 496 (conversion_declarator_opt)]
    $default  reduce using rule 496 (conversion_declarator_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 236
    ptr_operator               go to state 237
    conversion_declarator      go to state 238
    template_id                go to state 93
    conversion_declarator_opt  go to state 239


State 159

  370 conversion_function_id: OPERATOR conversion_type_id .

    $default  reduce using rule 370 (conversion_function_id)


State 160

  382 operator_function_id: OPERATOR operator .

    $default  reduce using rule 382 (operator_function_id)


State 161

  443 explicit_specialization: TEMPLATE '<' . '>' declaration

    '>'  shift, and go to state 240


State 162

  442 explicit_instantiation: TEMPLATE declaration .

    $default  reduce using rule 442 (explicit_instantiation)


State 163

  463 COLONCOLON_opt: COLONCOLON .

    $default  reduce using rule 463 (COLONCOLON_opt)


State 164

  231 elaborated_type_specifier: TYPENAME COLONCOLON_opt . nested_name_specifier identifier
  232                          | TYPENAME COLONCOLON_opt . nested_name_specifier identifier '<' template_argument_list '>'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 241
    template_id              go to state 93


State 165

  254 using_declaration: USING COLONCOLON . nested_name_specifier unqualified_id ';'
  256                  | USING COLONCOLON . unqualified_id ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    unqualified_id           go to state 242
    nested_name_specifier    go to state 243
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 166

  257 using_directive: USING NAMESPACE . COLONCOLON nested_name_specifier namespace_name ';'
  258                | USING NAMESPACE . COLONCOLON namespace_name ';'
  259                | USING NAMESPACE . nested_name_specifier namespace_name ';'
  260                | USING NAMESPACE . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 244

    namespace_name           go to state 245
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 246
    template_id              go to state 93


State 167

  252 using_declaration: USING TYPENAME . COLONCOLON nested_name_specifier unqualified_id ';'
  253                  | USING TYPENAME . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 247

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 248
    template_id              go to state 93


State 168

  255 using_declaration: USING nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 249
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 169

  284 ptr_operator: COLONCOLON . nested_name_specifier '*'
  290 declarator_id: COLONCOLON . id_expression
  291              | COLONCOLON . nested_name_specifier type_name
  292              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    typedef_name             go to state 46
    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 49
    enum_name                go to state 50
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 101
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 250
    type_name                go to state 103
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 170

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  282 ptr_operator: nested_name_specifier . '*'
  283             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 179
    '~'         shift, and go to state 43
    '*'         shift, and go to state 180

    identifier              go to state 52
    unqualified_id          go to state 182
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 171

  278 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 251


State 172

   30 unqualified_id: '~' class_name .

    $default  reduce using rule 30 (unqualified_id)


State 173

  280 ptr_operator: '*' cv_qualifier_seq .

    $default  reduce using rule 280 (ptr_operator)


State 174

  285 cv_qualifier_seq: cv_qualifier .
  286                 | cv_qualifier . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 285 (cv_qualifier_seq)

    cv_qualifier_seq  go to state 252
    cv_qualifier      go to state 174


State 175

   34 nested_name_specifier: namespace_name COLONCOLON . nested_name_specifier
   36                      | namespace_name COLONCOLON .

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    NAMESPACE_NAME  [reduce using rule 36 (nested_name_specifier)]
    CLASS_NAME      [reduce using rule 36 (nested_name_specifier)]
    TEMPLATE_NAME   [reduce using rule 36 (nested_name_specifier)]
    $default        reduce using rule 36 (nested_name_specifier)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 253
    template_id              go to state 93


State 176

   33 nested_name_specifier: class_name COLONCOLON . nested_name_specifier
   35                      | class_name COLONCOLON .

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    NAMESPACE_NAME  [reduce using rule 35 (nested_name_specifier)]
    CLASS_NAME      [reduce using rule 35 (nested_name_specifier)]
    TEMPLATE_NAME   [reduce using rule 35 (nested_name_specifier)]
    $default        reduce using rule 35 (nested_name_specifier)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 254
    template_id              go to state 93


State 177

  436 template_id: template_name '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 284
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 312
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 313
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument_list     go to state 315
    template_argument          go to state 316
    throw_expression           go to state 317


State 178

    0 $accept: translation_unit $end .

    $default  accept


State 179

   32 qualified_id: nested_name_specifier TEMPLATE . unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 318
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 180

  282 ptr_operator: nested_name_specifier '*' .
  283             | nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 282 (ptr_operator)

    cv_qualifier_seq  go to state 319
    cv_qualifier      go to state 174


State 181

  223 type_name: class_name .

    $default  reduce using rule 223 (type_name)


State 182

   31 qualified_id: nested_name_specifier unqualified_id .

    $default  reduce using rule 31 (qualified_id)


State 183

  210 simple_type_specifier: nested_name_specifier type_name .

    $default  reduce using rule 210 (simple_type_specifier)


State 184

  174 declaration_seq: declaration_seq declaration .

    $default  reduce using rule 174 (declaration_seq)


State 185

  199 storage_class_specifier: EXTERN .

    $default  reduce using rule 199 (storage_class_specifier)


State 186

  188 simple_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 188 (simple_declaration)


State 187

  195 decl_specifier_seq: decl_specifier_seq decl_specifier .

    $default  reduce using rule 195 (decl_specifier_seq)


State 188

  187 simple_declaration: decl_specifier_seq init_declarator_list . ';'
  265 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 320
    ';'  shift, and go to state 321


State 189

  264 init_declarator_list: init_declarator .

    $default  reduce using rule 264 (init_declarator_list)


State 190

  266 init_declarator: declarator . initializer_opt
  315 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  317                    | decl_specifier_seq declarator . function_try_block

    TRY  shift, and go to state 191
    '('  shift, and go to state 322
    ':'  shift, and go to state 192
    '='  shift, and go to state 323

    '{'       reduce using rule 488 (ctor_initializer_opt)
    $default  reduce using rule 478 (initializer_opt)

    initializer           go to state 324
    ctor_initializer      go to state 193
    function_try_block    go to state 325
    initializer_opt       go to state 326
    ctor_initializer_opt  go to state 327


State 191

  445 function_try_block: TRY . ctor_initializer_opt function_body handler_seq

    ':'  shift, and go to state 192

    $default  reduce using rule 488 (ctor_initializer_opt)

    ctor_initializer      go to state 193
    ctor_initializer_opt  go to state 328


State 192

  373 ctor_initializer: ':' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 329

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 330
    template_name            go to state 51
    identifier               go to state 331
    nested_name_specifier    go to state 332
    mem_initializer_list     go to state 333
    mem_initializer          go to state 334
    mem_initializer_id       go to state 335
    template_id              go to state 93


State 193

  489 ctor_initializer_opt: ctor_initializer .

    $default  reduce using rule 489 (ctor_initializer_opt)


State 194

  316 function_definition: declarator function_try_block .

    $default  reduce using rule 316 (function_definition)


State 195

  314 function_definition: declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 336

    compound_statement  go to state 337
    function_body       go to state 338


State 196

  270 direct_declarator: direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  271                  | direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq
  272                  | direct_declarator '(' . parameter_declaration_clause ')' exception_specification
  273                  | direct_declarator '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    '{'       reduce using rule 327 (class_head)
    $default  reduce using rule 306 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 339
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 197

  277 direct_declarator: direct_declarator '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 480 (constant_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 345
    conditional_expression     go to state 346
    constant_expression        go to state 347
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    constant_expression_opt    go to state 348


State 198

  268 declarator: ptr_operator declarator .

    $default  reduce using rule 268 (declarator)


State 199

  326 class_specifier: class_head '{' . member_specification_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 349
    PROTECTED       shift, and go to state 350
    PUBLIC          shift, and go to state 351
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 352
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 353

    TEMPLATE  reduce using rule 498 (EXPORT_opt)
    '}'       reduce using rule 492 (member_specification_opt)
    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 354
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 355
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 356
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 357
    declarator                 go to state 358
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 359
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 360
    member_declaration         go to state 361
    member_declarator_list     go to state 362
    member_declarator          go to state 363
    access_specifier           go to state 364
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_declaration       go to state 365
    template_id                go to state 93
    member_specification_opt   go to state 366
    EXPORT_opt                 go to state 97


State 200

  226 elaborated_type_specifier: class_key COLONCOLON . nested_name_specifier identifier
  227                          | class_key COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 367
    nested_name_specifier    go to state 368
    template_id              go to state 93


State 201

  328 class_head: class_key identifier . base_clause

    ':'  shift, and go to state 369

    base_clause  go to state 370


State 202

  329 class_head: class_key nested_name_specifier . identifier
  330           | class_key nested_name_specifier . identifier base_clause

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 371


State 203

  425 template_declaration: EXPORT_opt TEMPLATE . '<' template_parameter_list '>' declaration

    '<'  shift, and go to state 372


State 204

    4 class_name: CLASS_NAME .
  276 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME . '(' parameter_declaration_clause ')'

    '('  shift, and go to state 373

    $default  reduce using rule 4 (class_name)


State 205

  290 declarator_id: COLONCOLON . id_expression
  291              | COLONCOLON . nested_name_specifier type_name
  292              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    typedef_name             go to state 46
    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 49
    enum_name                go to state 50
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 101
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 374
    type_name                go to state 103
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 206

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 179
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 182
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 207

  275 direct_declarator: CLASS_NAME COLONCOLON declarator_id . '(' parameter_declaration_clause ')'

    '('  shift, and go to state 375


State 208

  305 parameter_declaration_clause: ELLIPSIS .

    $default  reduce using rule 305 (parameter_declaration_clause)


State 209

  195 decl_specifier_seq: decl_specifier_seq . decl_specifier
  310 parameter_declaration: decl_specifier_seq . declarator
  311                      | decl_specifier_seq . declarator '=' assignment_expression
  312                      | decl_specifier_seq . abstract_declarator_opt
  313                      | decl_specifier_seq . abstract_declarator_opt '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 376
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    '{'       reduce using rule 327 (class_head)
    $default  reduce using rule 482 (abstract_declarator_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    decl_specifier                  go to state 187
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    declarator                      go to state 377
    direct_declarator               go to state 82
    ptr_operator                    go to state 378
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    abstract_declarator             go to state 379
    direct_abstract_declarator      go to state 380
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    abstract_declarator_opt         go to state 381
    direct_abstract_declarator_opt  go to state 382


State 210

  274 direct_declarator: CLASS_NAME '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 383


State 211

  303 parameter_declaration_clause: parameter_declaration_list . ELLIPSIS
  304                             | parameter_declaration_list .
  307                             | parameter_declaration_list . ',' ELLIPSIS
  309 parameter_declaration_list: parameter_declaration_list . ',' parameter_declaration

    ELLIPSIS  shift, and go to state 384
    ','       shift, and go to state 385

    $default  reduce using rule 304 (parameter_declaration_clause)


State 212

  308 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 308 (parameter_declaration_list)


State 213

  284 ptr_operator: COLONCOLON nested_name_specifier '*' .

    $default  reduce using rule 284 (ptr_operator)


State 214

  291 declarator_id: COLONCOLON nested_name_specifier type_name .

    $default  reduce using rule 291 (declarator_id)


State 215

  211 simple_type_specifier: COLONCOLON nested_name_specifier_opt type_name .

    $default  reduce using rule 211 (simple_type_specifier)


State 216

  261 asm_definition: ASM '(' string_literal . ')' ';'

    ')'  shift, and go to state 386


State 217

  229 elaborated_type_specifier: ENUM COLONCOLON identifier .

    $default  reduce using rule 229 (elaborated_type_specifier)


State 218

  228 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 387


State 219

  233 enum_specifier: ENUM identifier '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 476 (enumerator_list_opt)

    identifier             go to state 388
    enumerator_list        go to state 389
    enumerator_definition  go to state 390
    enumerator             go to state 391
    enumerator_list_opt    go to state 392


State 220

  230 elaborated_type_specifier: ENUM nested_name_specifier identifier .

    $default  reduce using rule 230 (elaborated_type_specifier)


State 221

  262 linkage_specification: EXTERN string_literal '{' . declaration_seq_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    '}'       reduce using rule 456 (declaration_seq_opt)
    $default  reduce using rule 327 (class_head)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 393
    EXPORT_opt                      go to state 97


State 222

  263 linkage_specification: EXTERN string_literal declaration .

    $default  reduce using rule 263 (linkage_specification)


State 223

  245 unnamed_namespace_definition: NAMESPACE '{' namespace_body . '}'

    '}'  shift, and go to state 394


State 224

  246 namespace_body: declaration_seq_opt .

    $default  reduce using rule 246 (namespace_body)


State 225

  244 extension_namespace_definition: NAMESPACE original_namespace_name '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    '}'       reduce using rule 456 (declaration_seq_opt)
    $default  reduce using rule 327 (class_head)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 395
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 224
    EXPORT_opt                      go to state 97


State 226

  247 namespace_alias_definition: NAMESPACE identifier '=' . qualified_namespace_specifier ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 396

    namespace_name                 go to state 397
    original_namespace_name        go to state 48
    class_name                     go to state 107
    template_name                  go to state 51
    nested_name_specifier          go to state 398
    qualified_namespace_specifier  go to state 399
    template_id                    go to state 93


State 227

  243 original_namespace_definition: NAMESPACE identifier '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    '}'       reduce using rule 456 (declaration_seq_opt)
    $default  reduce using rule 327 (class_head)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 400
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 224
    EXPORT_opt                      go to state 97


State 228

  459 nested_name_specifier_opt: nested_name_specifier .

    $default  reduce using rule 459 (nested_name_specifier_opt)


State 229

  386 operator: DELETE '[' . ']'

    ']'  shift, and go to state 401


State 230

  385 operator: NEW '[' . ']'

    ']'  shift, and go to state 402


State 231

  423 operator: '(' ')' .

    $default  reduce using rule 423 (operator)


State 232

  424 operator: '[' ']' .

    $default  reduce using rule 424 (operator)


State 233

  485 type_specifier_seq_opt: type_specifier_seq .

    $default  reduce using rule 485 (type_specifier_seq_opt)


State 234

  294 type_specifier_seq: type_specifier type_specifier_seq_opt .

    $default  reduce using rule 294 (type_specifier_seq)


State 235

  284 ptr_operator: COLONCOLON . nested_name_specifier '*'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 403
    template_id              go to state 93


State 236

  282 ptr_operator: nested_name_specifier . '*'
  283             | nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 180


State 237

  372 conversion_declarator: ptr_operator . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 496 (conversion_declarator_opt)]
    '&'       [reduce using rule 496 (conversion_declarator_opt)]
    $default  reduce using rule 496 (conversion_declarator_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 236
    ptr_operator               go to state 237
    conversion_declarator      go to state 238
    template_id                go to state 93
    conversion_declarator_opt  go to state 404


State 238

  497 conversion_declarator_opt: conversion_declarator .

    $default  reduce using rule 497 (conversion_declarator_opt)


State 239

  371 conversion_type_id: type_specifier_seq conversion_declarator_opt .

    $default  reduce using rule 371 (conversion_type_id)


State 240

  443 explicit_specialization: TEMPLATE '<' '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    $default  reduce using rule 327 (class_head)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 405
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 241

  231 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier . identifier
  232                          | TYPENAME COLONCOLON_opt nested_name_specifier . identifier '<' template_argument_list '>'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 406


State 242

  256 using_declaration: USING COLONCOLON unqualified_id . ';'

    ';'  shift, and go to state 407


State 243

  254 using_declaration: USING COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 408
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 244

  257 using_directive: USING NAMESPACE COLONCOLON . nested_name_specifier namespace_name ';'
  258                | USING NAMESPACE COLONCOLON . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 409
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 410
    template_id              go to state 93


State 245

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  260 using_directive: USING NAMESPACE namespace_name . ';'

    COLONCOLON  shift, and go to state 175
    ';'         shift, and go to state 411


State 246

  259 using_directive: USING NAMESPACE nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 412
    original_namespace_name  go to state 48


State 247

  252 using_declaration: USING TYPENAME COLONCOLON . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 413
    template_id              go to state 93


State 248

  253 using_declaration: USING TYPENAME nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 414
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 249

  255 using_declaration: USING nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 415


State 250

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  284 ptr_operator: COLONCOLON nested_name_specifier . '*'
  291 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43
    '*'            shift, and go to state 213

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 214
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 251

  278 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 278 (direct_declarator)


State 252

  286 cv_qualifier_seq: cv_qualifier cv_qualifier_seq .

    $default  reduce using rule 286 (cv_qualifier_seq)


State 253

   34 nested_name_specifier: namespace_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 34 (nested_name_specifier)


State 254

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 33 (nested_name_specifier)


State 255

   14 integer_literal: INTEGER .

    $default  reduce using rule 14 (integer_literal)


State 256

   16 floating_literal: FLOATING .

    $default  reduce using rule 16 (floating_literal)


State 257

   15 character_literal: CHARACTER .

    $default  reduce using rule 15 (character_literal)


State 258

   77 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   79               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   88 delete_expression: COLONCOLON . DELETE cast_expression
   90                  | COLONCOLON . DELETE '[' ']' cast_expression
  211 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    DELETE          shift, and go to state 416
    NEW             shift, and go to state 417

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]
    $default       reduce using rule 458 (nested_name_specifier_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 104


State 259

   63 unary_expression: PLUSPLUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 418
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 260

   64 unary_expression: MINUSMINUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 419
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 261

   43 postfix_expression: BOOL . '(' expression_list_opt ')'
  214 simple_type_specifier: BOOL .

    '('  shift, and go to state 420

    '('       [reduce using rule 214 (simple_type_specifier)]
    $default  reduce using rule 214 (simple_type_specifier)


State 262

   42 postfix_expression: CHAR . '(' expression_list_opt ')'
  212 simple_type_specifier: CHAR .

    '('  shift, and go to state 421

    '('       [reduce using rule 212 (simple_type_specifier)]
    $default  reduce using rule 212 (simple_type_specifier)


State 263

   57 postfix_expression: CONST_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 422


State 264

   87 delete_expression: DELETE . cast_expression
   89                  | DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '['               shift, and go to state 423
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 424
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 265

   40 postfix_expression: DOUBLE . '(' expression_list_opt ')'
  221 simple_type_specifier: DOUBLE .

    '('  shift, and go to state 425

    '('       [reduce using rule 221 (simple_type_specifier)]
    $default  reduce using rule 221 (simple_type_specifier)


State 266

   54 postfix_expression: DYNAMIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 426


State 267

   19 boolean_literal: FALSE .

    $default  reduce using rule 19 (boolean_literal)


State 268

   41 postfix_expression: INT . '(' expression_list_opt ')'
  216 simple_type_specifier: INT .

    '('  shift, and go to state 427

    '('       [reduce using rule 216 (simple_type_specifier)]
    $default  reduce using rule 216 (simple_type_specifier)


State 269

   76 new_expression: NEW . new_placement_opt new_type_id new_initializer_opt
   78               | NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 428

    '('       [reduce using rule 464 (new_placement_opt)]
    $default  reduce using rule 464 (new_placement_opt)

    new_placement      go to state 429
    new_placement_opt  go to state 430


State 270

   56 postfix_expression: REINTERPRET_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 431


State 271

   68 unary_expression: SIZEOF . unary_expression
   69                 | SIZEOF . '(' type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 432
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 433
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 272

   55 postfix_expression: STATIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 434


State 273

   22 primary_expression: THIS .

    $default  reduce using rule 22 (primary_expression)


State 274

  452 throw_expression: THROW . assignment_expression_opt

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 502 (assignment_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 435
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    assignment_expression_opt  go to state 436


State 275

   18 boolean_literal: TRUE .

    $default  reduce using rule 18 (boolean_literal)


State 276

   58 postfix_expression: TYPEID . '(' expression ')'
   59                   | TYPEID . '(' type_id ')'

    '('  shift, and go to state 437


State 277

   23 primary_expression: '(' . expression ')'
   92 cast_expression: '(' . type_id ')' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 439
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 440
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 278

   30 unqualified_id: '~' . class_name
   75 unary_operator: '~' .

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    CLASS_NAME     [reduce using rule 75 (unary_operator)]
    TEMPLATE_NAME  [reduce using rule 75 (unary_operator)]
    $default       reduce using rule 75 (unary_operator)

    class_name     go to state 172
    template_name  go to state 51
    template_id    go to state 93


State 279

   65 unary_expression: '*' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 441
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 280

   66 unary_expression: '&' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 442
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 281

   72 unary_operator: '+' .

    $default  reduce using rule 72 (unary_operator)


State 282

   73 unary_operator: '-' .

    $default  reduce using rule 73 (unary_operator)


State 283

   74 unary_operator: '!' .

    $default  reduce using rule 74 (unary_operator)


State 284

  436 template_id: template_name . '<' template_argument_list '>'
  441 template_argument: template_name .

    '<'  shift, and go to state 177

    $default  reduce using rule 441 (template_argument)


State 285

   21 primary_expression: literal .

    $default  reduce using rule 21 (primary_expression)


State 286

    9 literal: integer_literal .

    $default  reduce using rule 9 (literal)


State 287

   10 literal: character_literal .

    $default  reduce using rule 10 (literal)


State 288

   11 literal: floating_literal .

    $default  reduce using rule 11 (literal)


State 289

   12 literal: string_literal .

    $default  reduce using rule 12 (literal)


State 290

   13 literal: boolean_literal .

    $default  reduce using rule 13 (literal)


State 291

   37 postfix_expression: primary_expression .

    $default  reduce using rule 37 (postfix_expression)


State 292

   24 primary_expression: id_expression .

    $default  reduce using rule 24 (primary_expression)


State 293

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  210 simple_type_specifier: nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 183
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 294

   38 postfix_expression: postfix_expression . '[' expression ']'
   39                   | postfix_expression . '(' expression_list_opt ')'
   44                   | postfix_expression . '.' TEMPLATE COLONCOLON id_expression
   45                   | postfix_expression . '.' TEMPLATE id_expression
   46                   | postfix_expression . '.' COLONCOLON id_expression
   47                   | postfix_expression . '.' id_expression
   48                   | postfix_expression . ARROW TEMPLATE COLONCOLON id_expression
   49                   | postfix_expression . ARROW TEMPLATE id_expression
   50                   | postfix_expression . ARROW COLONCOLON id_expression
   51                   | postfix_expression . ARROW id_expression
   52                   | postfix_expression . PLUSPLUS
   53                   | postfix_expression . MINUSMINUS
   62 unary_expression: postfix_expression .

    PLUSPLUS    shift, and go to state 443
    MINUSMINUS  shift, and go to state 444
    ARROW       shift, and go to state 445
    '('         shift, and go to state 446
    '['         shift, and go to state 447
    '.'         shift, and go to state 448

    $default  reduce using rule 62 (unary_expression)


State 295

   91 cast_expression: unary_expression .

    $default  reduce using rule 91 (cast_expression)


State 296

   67 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 449
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 297

   70 unary_expression: new_expression .

    $default  reduce using rule 70 (unary_expression)


State 298

   71 unary_expression: delete_expression .

    $default  reduce using rule 71 (unary_expression)


State 299

   93 pm_expression: cast_expression .

    $default  reduce using rule 93 (pm_expression)


State 300

   94 pm_expression: pm_expression . DOTSTAR cast_expression
   95              | pm_expression . ARROWSTAR cast_expression
   96 multiplicative_expression: pm_expression .

    DOTSTAR    shift, and go to state 450
    ARROWSTAR  shift, and go to state 451

    $default  reduce using rule 96 (multiplicative_expression)


State 301

   97 multiplicative_expression: multiplicative_expression . '*' pm_expression
   98                          | multiplicative_expression . '/' pm_expression
   99                          | multiplicative_expression . '%' pm_expression
  100 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 452
    '/'  shift, and go to state 453
    '%'  shift, and go to state 454

    $default  reduce using rule 100 (additive_expression)


State 302

  101 additive_expression: additive_expression . '+' multiplicative_expression
  102                    | additive_expression . '-' multiplicative_expression
  103 shift_expression: additive_expression .

    '+'  shift, and go to state 455
    '-'  shift, and go to state 456

    $default  reduce using rule 103 (shift_expression)


State 303

  104 shift_expression: shift_expression . SL additive_expression
  105                 | shift_expression . SR additive_expression
  106 relational_expression: shift_expression .

    SL  shift, and go to state 457
    SR  shift, and go to state 458

    $default  reduce using rule 106 (relational_expression)


State 304

  107 relational_expression: relational_expression . '<' shift_expression
  108                      | relational_expression . '>' shift_expression
  109                      | relational_expression . LTEQ shift_expression
  110                      | relational_expression . GTEQ shift_expression
  111 equality_expression: relational_expression .

    LTEQ  shift, and go to state 459
    GTEQ  shift, and go to state 460
    '<'   shift, and go to state 461
    '>'   shift, and go to state 462

    '>'       [reduce using rule 111 (equality_expression)]
    $default  reduce using rule 111 (equality_expression)


State 305

  112 equality_expression: equality_expression . EQ relational_expression
  113                    | equality_expression . NOTEQ relational_expression
  114 and_expression: equality_expression .

    EQ     shift, and go to state 463
    NOTEQ  shift, and go to state 464

    $default  reduce using rule 114 (and_expression)


State 306

  115 and_expression: and_expression . '&' equality_expression
  116 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 465

    $default  reduce using rule 116 (exclusive_or_expression)


State 307

  117 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  118 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 466

    $default  reduce using rule 118 (inclusive_or_expression)


State 308

  119 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  120 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 467

    $default  reduce using rule 120 (logical_and_expression)


State 309

  121 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  122 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 468

    $default  reduce using rule 122 (logical_or_expression)


State 310

  123 logical_or_expression: logical_or_expression . OROR logical_and_expression
  124 conditional_expression: logical_or_expression .
  125                       | logical_or_expression . '?' expression ':' assignment_expression
  127 assignment_expression: logical_or_expression . assignment_operator assignment_expression

    ADDEQ  shift, and go to state 469
    SUBEQ  shift, and go to state 470
    MULEQ  shift, and go to state 471
    DIVEQ  shift, and go to state 472
    MODEQ  shift, and go to state 473
    XOREQ  shift, and go to state 474
    ANDEQ  shift, and go to state 475
    OREQ   shift, and go to state 476
    SREQ   shift, and go to state 477
    SLEQ   shift, and go to state 478
    OROR   shift, and go to state 479
    '?'    shift, and go to state 480
    '='    shift, and go to state 481

    $default  reduce using rule 124 (conditional_expression)

    assignment_operator  go to state 482


State 311

  126 assignment_expression: conditional_expression .

    $default  reduce using rule 126 (assignment_expression)


State 312

  439 template_argument: assignment_expression .

    $default  reduce using rule 439 (template_argument)


State 313

  440 template_argument: type_id .

    $default  reduce using rule 440 (template_argument)


State 314

  293 type_id: type_specifier_seq . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '('             shift, and go to state 483
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    $default  reduce using rule 482 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    nested_name_specifier           go to state 236
    ptr_operator                    go to state 484
    abstract_declarator             go to state 379
    direct_abstract_declarator      go to state 380
    template_id                     go to state 93
    abstract_declarator_opt         go to state 485
    direct_abstract_declarator_opt  go to state 382


State 315

  436 template_id: template_name '<' template_argument_list . '>'
  438 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 486
    ','  shift, and go to state 487


State 316

  437 template_argument_list: template_argument .

    $default  reduce using rule 437 (template_argument_list)


State 317

  128 assignment_expression: throw_expression .

    $default  reduce using rule 128 (assignment_expression)


State 318

   32 qualified_id: nested_name_specifier TEMPLATE unqualified_id .

    $default  reduce using rule 32 (qualified_id)


State 319

  283 ptr_operator: nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 283 (ptr_operator)


State 320

  265 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    init_declarator          go to state 488
    declarator               go to state 489
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 321

  187 simple_declaration: decl_specifier_seq init_declarator_list ';' .

    $default  reduce using rule 187 (simple_declaration)


State 322

  320 initializer: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    expression_list            go to state 490
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 491
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 323

  319 initializer: '=' . initializer_clause

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 492

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 493
    initializer_clause         go to state 494
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 324

  479 initializer_opt: initializer .

    $default  reduce using rule 479 (initializer_opt)


State 325

  317 function_definition: decl_specifier_seq declarator function_try_block .

    $default  reduce using rule 317 (function_definition)


State 326

  266 init_declarator: declarator initializer_opt .

    $default  reduce using rule 266 (init_declarator)


State 327

  315 function_definition: decl_specifier_seq declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 336

    compound_statement  go to state 337
    function_body       go to state 495


State 328

  445 function_try_block: TRY ctor_initializer_opt . function_body handler_seq

    '{'  shift, and go to state 336

    compound_statement  go to state 337
    function_body       go to state 496


State 329

  377 mem_initializer_id: COLONCOLON . nested_name_specifier class_name
  378                   | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 497
    template_name            go to state 51
    nested_name_specifier    go to state 498
    template_id              go to state 93


State 330

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  380 mem_initializer_id: class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 380 (mem_initializer_id)


State 331

  381 mem_initializer_id: identifier .

    $default  reduce using rule 381 (mem_initializer_id)


State 332

  379 mem_initializer_id: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 499
    template_name  go to state 51
    template_id    go to state 93


State 333

  373 ctor_initializer: ':' mem_initializer_list .

    $default  reduce using rule 373 (ctor_initializer)


State 334

  374 mem_initializer_list: mem_initializer .
  375                     | mem_initializer . ',' mem_initializer_list

    ','  shift, and go to state 500

    $default  reduce using rule 374 (mem_initializer_list)


State 335

  376 mem_initializer: mem_initializer_id . '(' expression_list_opt ')'

    '('  shift, and go to state 501


State 336

  155 compound_statement: '{' . statement_seq_opt '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    '}'       reduce using rule 472 (statement_seq_opt)
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 517
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    statement_seq               go to state 521
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529
    statement_seq_opt           go to state 530


State 337

  318 function_body: compound_statement .

    $default  reduce using rule 318 (function_body)


State 338

  314 function_definition: declarator ctor_initializer_opt function_body .

    $default  reduce using rule 314 (function_definition)


State 339

  270 direct_declarator: direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  271                  | direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq
  272                  | direct_declarator '(' parameter_declaration_clause . ')' exception_specification
  273                  | direct_declarator '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 531


State 340

   77 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   79               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   88 delete_expression: COLONCOLON . DELETE cast_expression
   90                  | COLONCOLON . DELETE '[' ']' cast_expression

    DELETE  shift, and go to state 416
    NEW     shift, and go to state 417


State 341

   43 postfix_expression: BOOL . '(' expression_list_opt ')'

    '('  shift, and go to state 420


State 342

   42 postfix_expression: CHAR . '(' expression_list_opt ')'

    '('  shift, and go to state 421


State 343

   40 postfix_expression: DOUBLE . '(' expression_list_opt ')'

    '('  shift, and go to state 425


State 344

   41 postfix_expression: INT . '(' expression_list_opt ')'

    '('  shift, and go to state 427


State 345

  123 logical_or_expression: logical_or_expression . OROR logical_and_expression
  124 conditional_expression: logical_or_expression .
  125                       | logical_or_expression . '?' expression ':' assignment_expression

    OROR  shift, and go to state 479
    '?'   shift, and go to state 480

    $default  reduce using rule 124 (conditional_expression)


State 346

  142 constant_expression: conditional_expression .

    $default  reduce using rule 142 (constant_expression)


State 347

  481 constant_expression_opt: constant_expression .

    $default  reduce using rule 481 (constant_expression_opt)


State 348

  277 direct_declarator: direct_declarator '[' constant_expression_opt . ']'

    ']'  shift, and go to state 532


State 349

  367 access_specifier: PRIVATE .

    $default  reduce using rule 367 (access_specifier)


State 350

  368 access_specifier: PROTECTED .

    $default  reduce using rule 368 (access_specifier)


State 351

  369 access_specifier: PUBLIC .

    $default  reduce using rule 369 (access_specifier)


State 352

  252 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  253                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  254                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  255                  | USING . nested_name_specifier unqualified_id ';'
  256                  | USING . COLONCOLON unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 165
    TYPENAME        shift, and go to state 167

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 168
    template_id              go to state 93


State 353

  339 member_declaration: ';' .

    $default  reduce using rule 339 (member_declaration)


State 354

   27 unqualified_id: identifier .
  349 member_declarator: identifier . ':' constant_expression

    ':'  shift, and go to state 533

    ':'       [reduce using rule 27 (unqualified_id)]
    $default  reduce using rule 27 (unqualified_id)


State 355

   26 id_expression: qualified_id .
  341 member_declaration: qualified_id . ';'

    ';'  shift, and go to state 534

    ';'       [reduce using rule 26 (id_expression)]
    $default  reduce using rule 26 (id_expression)


State 356

  195 decl_specifier_seq: decl_specifier_seq . decl_specifier
  315 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  317                    | decl_specifier_seq . declarator function_try_block
  336 member_declaration: decl_specifier_seq . member_declarator_list ';'
  337                   | decl_specifier_seq . ';'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 535

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 354
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 187
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    declarator                 go to state 536
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_declarator_list     go to state 537
    member_declarator          go to state 363
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 357

  342 member_declaration: using_declaration .

    $default  reduce using rule 342 (member_declaration)


State 358

  314 function_definition: declarator . ctor_initializer_opt function_body
  316                    | declarator . function_try_block
  346 member_declarator: declarator .
  347                  | declarator . pure_specifier
  348                  | declarator . constant_initializer

    TRY  shift, and go to state 191
    ':'  shift, and go to state 192
    '='  shift, and go to state 538

    '{'       reduce using rule 488 (ctor_initializer_opt)
    $default  reduce using rule 346 (member_declarator)

    pure_specifier        go to state 539
    constant_initializer  go to state 540
    ctor_initializer      go to state 193
    function_try_block    go to state 194
    ctor_initializer_opt  go to state 195


State 359

  340 member_declaration: function_definition . SEMICOLON_opt

    ';'  shift, and go to state 541

    ';'       [reduce using rule 494 (SEMICOLON_opt)]
    $default  reduce using rule 494 (SEMICOLON_opt)

    SEMICOLON_opt  go to state 542


State 360

  493 member_specification_opt: member_specification .

    $default  reduce using rule 493 (member_specification_opt)


State 361

  334 member_specification: member_declaration . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 349
    PROTECTED       shift, and go to state 350
    PUBLIC          shift, and go to state 351
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 352
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 353

    TEMPLATE  reduce using rule 498 (EXPORT_opt)
    '}'       reduce using rule 492 (member_specification_opt)
    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 354
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 355
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 356
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 357
    declarator                 go to state 358
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 359
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 360
    member_declaration         go to state 361
    member_declarator_list     go to state 362
    member_declarator          go to state 363
    access_specifier           go to state 364
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_declaration       go to state 365
    template_id                go to state 93
    member_specification_opt   go to state 543
    EXPORT_opt                 go to state 97


State 362

  338 member_declaration: member_declarator_list . ';'
  345 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 544
    ';'  shift, and go to state 545


State 363

  344 member_declarator_list: member_declarator .

    $default  reduce using rule 344 (member_declarator_list)


State 364

  335 member_specification: access_specifier . ':' member_specification_opt

    ':'  shift, and go to state 546


State 365

  343 member_declaration: template_declaration .

    $default  reduce using rule 343 (member_declaration)


State 366

  326 class_specifier: class_head '{' member_specification_opt . '}'

    '}'  shift, and go to state 547


State 367

  227 elaborated_type_specifier: class_key COLONCOLON identifier .

    $default  reduce using rule 227 (elaborated_type_specifier)


State 368

  226 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 548


State 369

  352 base_clause: ':' . base_specifier_list

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 549
    PRIVATE         shift, and go to state 349
    PROTECTED       shift, and go to state 350
    PUBLIC          shift, and go to state 351
    VIRTUAL         shift, and go to state 550

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 551
    template_name            go to state 51
    nested_name_specifier    go to state 552
    base_specifier_list      go to state 553
    base_specifier           go to state 554
    access_specifier         go to state 555
    template_id              go to state 93


State 370

  328 class_head: class_key identifier base_clause .

    $default  reduce using rule 328 (class_head)


State 371

  329 class_head: class_key nested_name_specifier identifier .
  330           | class_key nested_name_specifier identifier . base_clause

    ':'  shift, and go to state 369

    $default  reduce using rule 329 (class_head)

    base_clause  go to state 556


State 372

  425 template_declaration: EXPORT_opt TEMPLATE '<' . template_parameter_list '>' declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 557
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 558
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 559
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 560
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter_list    go to state 561
    template_parameter         go to state 562
    type_parameter             go to state 563
    template_id                go to state 93


State 373

  276 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    '{'       reduce using rule 327 (class_head)
    $default  reduce using rule 306 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 564
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 374

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  291 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 214
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 375

  275 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    '{'       reduce using rule 327 (class_head)
    $default  reduce using rule 306 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 565
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 376

  278 direct_declarator: '(' . declarator ')'
  302 direct_abstract_declarator: '(' . abstract_declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 376
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    $default  reduce using rule 486 (direct_abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 170
    declarator                      go to state 171
    direct_declarator               go to state 82
    ptr_operator                    go to state 378
    declarator_id                   go to state 85
    abstract_declarator             go to state 566
    direct_abstract_declarator      go to state 380
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 382


State 377

  310 parameter_declaration: decl_specifier_seq declarator .
  311                      | decl_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 567

    $default  reduce using rule 310 (parameter_declaration)


State 378

  268 declarator: ptr_operator . declarator
  295 abstract_declarator: ptr_operator . abstract_declarator_opt

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 376
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    $default  reduce using rule 482 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 170
    declarator                      go to state 198
    direct_declarator               go to state 82
    ptr_operator                    go to state 378
    declarator_id                   go to state 85
    abstract_declarator             go to state 379
    direct_abstract_declarator      go to state 380
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    abstract_declarator_opt         go to state 568
    direct_abstract_declarator_opt  go to state 382


State 379

  483 abstract_declarator_opt: abstract_declarator .

    $default  reduce using rule 483 (abstract_declarator_opt)


State 380

  296 abstract_declarator: direct_abstract_declarator .
  487 direct_abstract_declarator_opt: direct_abstract_declarator .

    '('       reduce using rule 487 (direct_abstract_declarator_opt)
    '['       reduce using rule 487 (direct_abstract_declarator_opt)
    $default  reduce using rule 296 (abstract_declarator)


State 381

  312 parameter_declaration: decl_specifier_seq abstract_declarator_opt .
  313                      | decl_specifier_seq abstract_declarator_opt . '=' assignment_expression

    '='  shift, and go to state 569

    $default  reduce using rule 312 (parameter_declaration)


State 382

  297 direct_abstract_declarator: direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  298                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq
  299                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' exception_specification
  300                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')'
  301                           | direct_abstract_declarator_opt . '[' constant_expression_opt ']'

    '('  shift, and go to state 570
    '['  shift, and go to state 571


State 383

  274 direct_declarator: CLASS_NAME '(' parameter_declaration_clause ')' .

    $default  reduce using rule 274 (direct_declarator)


State 384

  303 parameter_declaration_clause: parameter_declaration_list ELLIPSIS .

    $default  reduce using rule 303 (parameter_declaration_clause)


State 385

  307 parameter_declaration_clause: parameter_declaration_list ',' . ELLIPSIS
  309 parameter_declaration_list: parameter_declaration_list ',' . parameter_declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 572
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 573
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 386

  261 asm_definition: ASM '(' string_literal ')' . ';'

    ';'  shift, and go to state 574


State 387

  228 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 228 (elaborated_type_specifier)


State 388

  238 enumerator: identifier .

    $default  reduce using rule 238 (enumerator)


State 389

  235 enumerator_list: enumerator_list . ',' enumerator_definition
  477 enumerator_list_opt: enumerator_list .

    ','  shift, and go to state 575

    $default  reduce using rule 477 (enumerator_list_opt)


State 390

  234 enumerator_list: enumerator_definition .

    $default  reduce using rule 234 (enumerator_list)


State 391

  236 enumerator_definition: enumerator .
  237                      | enumerator . '=' constant_expression

    '='  shift, and go to state 576

    $default  reduce using rule 236 (enumerator_definition)


State 392

  233 enum_specifier: ENUM identifier '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 577


State 393

  262 linkage_specification: EXTERN string_literal '{' declaration_seq_opt . '}'

    '}'  shift, and go to state 578


State 394

  245 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}' .

    $default  reduce using rule 245 (unnamed_namespace_definition)


State 395

  244 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body . '}'

    '}'  shift, and go to state 579


State 396

  248 qualified_namespace_specifier: COLONCOLON . nested_name_specifier namespace_name
  249                              | COLONCOLON . namespace_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 580
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 581
    template_id              go to state 93


State 397

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  251 qualified_namespace_specifier: namespace_name .

    COLONCOLON  shift, and go to state 175

    $default  reduce using rule 251 (qualified_namespace_specifier)


State 398

  250 qualified_namespace_specifier: nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 582
    original_namespace_name  go to state 48


State 399

  247 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier . ';'

    ';'  shift, and go to state 583


State 400

  243 original_namespace_definition: NAMESPACE identifier '{' namespace_body . '}'

    '}'  shift, and go to state 584


State 401

  386 operator: DELETE '[' ']' .

    $default  reduce using rule 386 (operator)


State 402

  385 operator: NEW '[' ']' .

    $default  reduce using rule 385 (operator)


State 403

  284 ptr_operator: COLONCOLON nested_name_specifier . '*'

    '*'  shift, and go to state 213


State 404

  372 conversion_declarator: ptr_operator conversion_declarator_opt .

    $default  reduce using rule 372 (conversion_declarator)


State 405

  443 explicit_specialization: TEMPLATE '<' '>' declaration .

    $default  reduce using rule 443 (explicit_specialization)


State 406

  231 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier .
  232                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier . '<' template_argument_list '>'

    '<'  shift, and go to state 585

    '<'       [reduce using rule 231 (elaborated_type_specifier)]
    $default  reduce using rule 231 (elaborated_type_specifier)


State 407

  256 using_declaration: USING COLONCOLON unqualified_id ';' .

    $default  reduce using rule 256 (using_declaration)


State 408

  254 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 586


State 409

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  258 using_directive: USING NAMESPACE COLONCOLON namespace_name . ';'

    COLONCOLON  shift, and go to state 175
    ';'         shift, and go to state 587


State 410

  257 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 588
    original_namespace_name  go to state 48


State 411

  260 using_directive: USING NAMESPACE namespace_name ';' .

    $default  reduce using rule 260 (using_directive)


State 412

  259 using_directive: USING NAMESPACE nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 589


State 413

  252 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 590
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 414

  253 using_declaration: USING TYPENAME nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 591


State 415

  255 using_declaration: USING nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 255 (using_declaration)


State 416

   88 delete_expression: COLONCOLON DELETE . cast_expression
   90                  | COLONCOLON DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '['               shift, and go to state 592
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 593
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 417

   77 new_expression: COLONCOLON NEW . new_placement_opt new_type_id new_initializer_opt
   79               | COLONCOLON NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 428

    '('       [reduce using rule 464 (new_placement_opt)]
    $default  reduce using rule 464 (new_placement_opt)

    new_placement      go to state 429
    new_placement_opt  go to state 594


State 418

   63 unary_expression: PLUSPLUS cast_expression .

    $default  reduce using rule 63 (unary_expression)


State 419

   64 unary_expression: MINUSMINUS cast_expression .

    $default  reduce using rule 64 (unary_expression)


State 420

   43 postfix_expression: BOOL '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    expression_list            go to state 595
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 491
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    expression_list_opt        go to state 596


State 421

   42 postfix_expression: CHAR '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    expression_list            go to state 595
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 491
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    expression_list_opt        go to state 597


State 422

   57 postfix_expression: CONST_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 598
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 423

   89 delete_expression: DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 599


State 424

   87 delete_expression: DELETE cast_expression .

    $default  reduce using rule 87 (delete_expression)


State 425

   40 postfix_expression: DOUBLE '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    expression_list            go to state 595
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 491
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    expression_list_opt        go to state 600


State 426

   54 postfix_expression: DYNAMIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 601
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 427

   41 postfix_expression: INT '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    expression_list            go to state 595
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 491
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    expression_list_opt        go to state 602


State 428

   80 new_placement: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    expression_list            go to state 603
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 491
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 429

  465 new_placement_opt: new_placement .

    $default  reduce using rule 465 (new_placement_opt)


State 430

   76 new_expression: NEW new_placement_opt . new_type_id new_initializer_opt
   78               | NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 604

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    new_type_id                go to state 605
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 606
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 431

   56 postfix_expression: REINTERPRET_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 607
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 432

   23 primary_expression: '(' . expression ')'
   69 unary_expression: SIZEOF '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 439
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 608
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 433

   68 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 68 (unary_expression)


State 434

   55 postfix_expression: STATIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 609
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 435

  503 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 503 (assignment_expression_opt)


State 436

  452 throw_expression: THROW assignment_expression_opt .

    $default  reduce using rule 452 (throw_expression)


State 437

   58 postfix_expression: TYPEID '(' . expression ')'
   59                   | TYPEID '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 610
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 611
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 438

  140 expression: assignment_expression .

    $default  reduce using rule 140 (expression)


State 439

   23 primary_expression: '(' expression . ')'
  141 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 612
    ','  shift, and go to state 613


State 440

   92 cast_expression: '(' type_id . ')' cast_expression

    ')'  shift, and go to state 614


State 441

   65 unary_expression: '*' cast_expression .

    $default  reduce using rule 65 (unary_expression)


State 442

   66 unary_expression: '&' cast_expression .

    $default  reduce using rule 66 (unary_expression)


State 443

   52 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 52 (postfix_expression)


State 444

   53 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 53 (postfix_expression)


State 445

   48 postfix_expression: postfix_expression ARROW . TEMPLATE COLONCOLON id_expression
   49                   | postfix_expression ARROW . TEMPLATE id_expression
   50                   | postfix_expression ARROW . COLONCOLON id_expression
   51                   | postfix_expression ARROW . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 615
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 616
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 617
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 446

   39 postfix_expression: postfix_expression '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    expression_list            go to state 595
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 491
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    expression_list_opt        go to state 618


State 447

   38 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 619
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 448

   44 postfix_expression: postfix_expression '.' . TEMPLATE COLONCOLON id_expression
   45                   | postfix_expression '.' . TEMPLATE id_expression
   46                   | postfix_expression '.' . COLONCOLON id_expression
   47                   | postfix_expression '.' . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 620
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 621
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 622
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 449

   67 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 67 (unary_expression)


State 450

   94 pm_expression: pm_expression DOTSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 623
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 451

   95 pm_expression: pm_expression ARROWSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 624
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 452

   97 multiplicative_expression: multiplicative_expression '*' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 299
    pm_expression            go to state 625
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 453

   98 multiplicative_expression: multiplicative_expression '/' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 299
    pm_expression            go to state 626
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 454

   99 multiplicative_expression: multiplicative_expression '%' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 299
    pm_expression            go to state 627
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 455

  101 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 628
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 456

  102 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 629
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 457

  104 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 630
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 458

  105 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 631
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 459

  109 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 632
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 460

  110 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 633
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 461

  107 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 634
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 462

  108 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 635
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 463

  112 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 636
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 464

  113 equality_expression: equality_expression NOTEQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 637
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 465

  115 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 638
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 466

  117 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 639
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 467

  119 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 640
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 468

  121 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 641
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 469

  133 assignment_operator: ADDEQ .

    $default  reduce using rule 133 (assignment_operator)


State 470

  134 assignment_operator: SUBEQ .

    $default  reduce using rule 134 (assignment_operator)


State 471

  130 assignment_operator: MULEQ .

    $default  reduce using rule 130 (assignment_operator)


State 472

  131 assignment_operator: DIVEQ .

    $default  reduce using rule 131 (assignment_operator)


State 473

  132 assignment_operator: MODEQ .

    $default  reduce using rule 132 (assignment_operator)


State 474

  138 assignment_operator: XOREQ .

    $default  reduce using rule 138 (assignment_operator)


State 475

  137 assignment_operator: ANDEQ .

    $default  reduce using rule 137 (assignment_operator)


State 476

  139 assignment_operator: OREQ .

    $default  reduce using rule 139 (assignment_operator)


State 477

  135 assignment_operator: SREQ .

    $default  reduce using rule 135 (assignment_operator)


State 478

  136 assignment_operator: SLEQ .

    $default  reduce using rule 136 (assignment_operator)


State 479

  123 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 642
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 480

  125 conditional_expression: logical_or_expression '?' . expression ':' assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 643
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 481

  129 assignment_operator: '=' .

    $default  reduce using rule 129 (assignment_operator)


State 482

  127 assignment_expression: logical_or_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 644
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 483

  302 direct_abstract_declarator: '(' . abstract_declarator ')'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '('             shift, and go to state 483
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    $default  reduce using rule 486 (direct_abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    nested_name_specifier           go to state 236
    ptr_operator                    go to state 484
    abstract_declarator             go to state 566
    direct_abstract_declarator      go to state 380
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 382


State 484

  295 abstract_declarator: ptr_operator . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '('             shift, and go to state 483
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    $default  reduce using rule 482 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    nested_name_specifier           go to state 236
    ptr_operator                    go to state 484
    abstract_declarator             go to state 379
    direct_abstract_declarator      go to state 380
    template_id                     go to state 93
    abstract_declarator_opt         go to state 568
    direct_abstract_declarator_opt  go to state 382


State 485

  293 type_id: type_specifier_seq abstract_declarator_opt .

    $default  reduce using rule 293 (type_id)


State 486

  436 template_id: template_name '<' template_argument_list '>' .

    $default  reduce using rule 436 (template_id)


State 487

  438 template_argument_list: template_argument_list ',' . template_argument

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 284
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 312
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 313
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument          go to state 645
    throw_expression           go to state 317


State 488

  265 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 265 (init_declarator_list)


State 489

  266 init_declarator: declarator . initializer_opt

    '('  shift, and go to state 322
    '='  shift, and go to state 323

    $default  reduce using rule 478 (initializer_opt)

    initializer      go to state 324
    initializer_opt  go to state 326


State 490

   61 expression_list: expression_list . ',' assignment_expression
  320 initializer: '(' expression_list . ')'

    ')'  shift, and go to state 646
    ','  shift, and go to state 647


State 491

   60 expression_list: assignment_expression .

    $default  reduce using rule 60 (expression_list)


State 492

  322 initializer_clause: '{' . initializer_list COMMA_opt '}'
  323                   | '{' . '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 492
    '}'               shift, and go to state 648

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 493
    initializer_clause         go to state 649
    initializer_list           go to state 650
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 493

  321 initializer_clause: assignment_expression .

    $default  reduce using rule 321 (initializer_clause)


State 494

  319 initializer: '=' initializer_clause .

    $default  reduce using rule 319 (initializer)


State 495

  315 function_definition: decl_specifier_seq declarator ctor_initializer_opt function_body .

    $default  reduce using rule 315 (function_definition)


State 496

  445 function_try_block: TRY ctor_initializer_opt function_body . handler_seq

    CATCH  shift, and go to state 651

    handler_seq  go to state 652
    handler      go to state 653


State 497

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  378 mem_initializer_id: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 378 (mem_initializer_id)


State 498

  377 mem_initializer_id: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 654
    template_name  go to state 51
    template_id    go to state 93


State 499

  379 mem_initializer_id: nested_name_specifier class_name .

    $default  reduce using rule 379 (mem_initializer_id)


State 500

  375 mem_initializer_list: mem_initializer ',' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 329

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 330
    template_name            go to state 51
    identifier               go to state 331
    nested_name_specifier    go to state 332
    mem_initializer_list     go to state 655
    mem_initializer          go to state 334
    mem_initializer_id       go to state 335
    template_id              go to state 93


State 501

  376 mem_initializer: mem_initializer_id '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    expression_list            go to state 595
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 491
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    expression_list_opt        go to state 656


State 502

  168 jump_statement: BREAK . ';'

    ';'  shift, and go to state 657


State 503

  152 labeled_statement: CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 345
    conditional_expression     go to state 346
    constant_expression        go to state 658
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 504

  169 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 659


State 505

  153 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 660


State 506

  164 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 661
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529


State 507

  165 iteration_statement: FOR . '(' for_init_statement condition_opt ';' expression_opt ')' statement

    '('  shift, and go to state 662


State 508

  171 jump_statement: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 663


State 509

  158 selection_statement: IF . '(' condition ')' statement
  159                    | IF . '(' condition ')' statement ELSE statement

    '('  shift, and go to state 664


State 510

  247 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 665


State 511

  170 jump_statement: RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 470 (expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 516
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    expression_opt             go to state 666


State 512

  160 selection_statement: SWITCH . '(' condition ')' statement

    '('  shift, and go to state 667


State 513

  444 try_block: TRY . compound_statement handler_seq

    '{'  shift, and go to state 336

    compound_statement  go to state 668


State 514

  163 iteration_statement: WHILE . '(' condition ')' statement

    '('  shift, and go to state 669


State 515

   27 unqualified_id: identifier .
  151 labeled_statement: identifier . ':' statement

    ':'  shift, and go to state 670

    $default  reduce using rule 27 (unqualified_id)


State 516

  141 expression: expression . ',' assignment_expression
  471 expression_opt: expression .

    ','  shift, and go to state 613

    $default  reduce using rule 471 (expression_opt)


State 517

  156 statement_seq: statement .

    $default  reduce using rule 156 (statement_seq)


State 518

  143 statement: labeled_statement .

    $default  reduce using rule 143 (statement)


State 519

  144 statement: expression_statement .

    $default  reduce using rule 144 (statement)


State 520

  145 statement: compound_statement .

    $default  reduce using rule 145 (statement)


State 521

  157 statement_seq: statement_seq . statement
  473 statement_seq_opt: statement_seq .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    '}'       reduce using rule 473 (statement_seq_opt)
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 671
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529


State 522

  146 statement: selection_statement .

    $default  reduce using rule 146 (statement)


State 523

  147 statement: iteration_statement .

    $default  reduce using rule 147 (statement)


State 524

  148 statement: jump_statement .

    $default  reduce using rule 148 (statement)


State 525

  149 statement: declaration_statement .

    $default  reduce using rule 149 (statement)


State 526

  172 declaration_statement: block_declaration .

    $default  reduce using rule 172 (declaration_statement)


State 527

  187 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  188                   | decl_specifier_seq . ';'
  195 decl_specifier_seq: decl_specifier_seq . decl_specifier

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 186

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 187
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    init_declarator_list       go to state 188
    init_declarator            go to state 189
    declarator                 go to state 489
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 528

  150 statement: try_block .

    $default  reduce using rule 150 (statement)


State 529

  154 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 672


State 530

  155 compound_statement: '{' statement_seq_opt . '}'

    '}'  shift, and go to state 673


State 531

  270 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  271                  | direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq
  272                  | direct_declarator '(' parameter_declaration_clause ')' . exception_specification
  273                  | direct_declarator '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 674
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 273 (direct_declarator)

    cv_qualifier_seq         go to state 675
    cv_qualifier             go to state 174
    exception_specification  go to state 676


State 532

  277 direct_declarator: direct_declarator '[' constant_expression_opt ']' .

    $default  reduce using rule 277 (direct_declarator)


State 533

  349 member_declarator: identifier ':' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 345
    conditional_expression     go to state 346
    constant_expression        go to state 677
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 534

  341 member_declaration: qualified_id ';' .

    $default  reduce using rule 341 (member_declaration)


State 535

  337 member_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 337 (member_declaration)


State 536

  315 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  317                    | decl_specifier_seq declarator . function_try_block
  346 member_declarator: declarator .
  347                  | declarator . pure_specifier
  348                  | declarator . constant_initializer

    TRY  shift, and go to state 191
    ':'  shift, and go to state 192
    '='  shift, and go to state 538

    '{'       reduce using rule 488 (ctor_initializer_opt)
    $default  reduce using rule 346 (member_declarator)

    pure_specifier        go to state 539
    constant_initializer  go to state 540
    ctor_initializer      go to state 193
    function_try_block    go to state 325
    ctor_initializer_opt  go to state 327


State 537

  336 member_declaration: decl_specifier_seq member_declarator_list . ';'
  345 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 544
    ';'  shift, and go to state 678


State 538

  350 pure_specifier: '=' . '0'
  351 constant_initializer: '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '0'               shift, and go to state 679

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 345
    conditional_expression     go to state 346
    constant_expression        go to state 680
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 539

  347 member_declarator: declarator pure_specifier .

    $default  reduce using rule 347 (member_declarator)


State 540

  348 member_declarator: declarator constant_initializer .

    $default  reduce using rule 348 (member_declarator)


State 541

  495 SEMICOLON_opt: ';' .

    $default  reduce using rule 495 (SEMICOLON_opt)


State 542

  340 member_declaration: function_definition SEMICOLON_opt .

    $default  reduce using rule 340 (member_declaration)


State 543

  334 member_specification: member_declaration member_specification_opt .

    $default  reduce using rule 334 (member_specification)


State 544

  345 member_declarator_list: member_declarator_list ',' . member_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 354
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 681
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    member_declarator        go to state 682
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 545

  338 member_declaration: member_declarator_list ';' .

    $default  reduce using rule 338 (member_declaration)


State 546

  335 member_specification: access_specifier ':' . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 349
    PROTECTED       shift, and go to state 350
    PUBLIC          shift, and go to state 351
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 352
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 353

    TEMPLATE  reduce using rule 498 (EXPORT_opt)
    '}'       reduce using rule 492 (member_specification_opt)
    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 354
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 355
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 356
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 357
    declarator                 go to state 358
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 359
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 360
    member_declaration         go to state 361
    member_declarator_list     go to state 362
    member_declarator          go to state 363
    access_specifier           go to state 364
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_declaration       go to state 365
    template_id                go to state 93
    member_specification_opt   go to state 683
    EXPORT_opt                 go to state 97


State 547

  326 class_specifier: class_head '{' member_specification_opt '}' .

    $default  reduce using rule 326 (class_specifier)


State 548

  226 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 226 (elaborated_type_specifier)


State 549

  355 base_specifier: COLONCOLON . nested_name_specifier class_name
  356               | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 684
    template_name            go to state 51
    nested_name_specifier    go to state 685
    template_id              go to state 93


State 550

  359 base_specifier: VIRTUAL . access_specifier COLONCOLON nested_name_specifier_opt class_name
  360               | VIRTUAL . access_specifier nested_name_specifier_opt class_name
  361               | VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  362               | VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 686
    PRIVATE         shift, and go to state 349
    PROTECTED       shift, and go to state 350
    PUBLIC          shift, and go to state 351

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    access_specifier           go to state 687
    template_id                go to state 93
    nested_name_specifier_opt  go to state 688


State 551

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  358 base_specifier: class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 358 (base_specifier)


State 552

  357 base_specifier: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 689
    template_name  go to state 51
    template_id    go to state 93


State 553

  352 base_clause: ':' base_specifier_list .
  354 base_specifier_list: base_specifier_list . ',' base_specifier

    ','  shift, and go to state 690

    $default  reduce using rule 352 (base_clause)


State 554

  353 base_specifier_list: base_specifier .

    $default  reduce using rule 353 (base_specifier_list)


State 555

  363 base_specifier: access_specifier . VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  364               | access_specifier . VIRTUAL nested_name_specifier_opt class_name
  365               | access_specifier . COLONCOLON nested_name_specifier_opt class_name
  366               | access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 691
    VIRTUAL         shift, and go to state 692

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 693


State 556

  330 class_head: class_key nested_name_specifier identifier base_clause .

    $default  reduce using rule 330 (class_head)


State 557

  331 class_key: CLASS .
  430 type_parameter: CLASS . identifier
  431               | CLASS . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1

    IDENTIFIER  [reduce using rule 331 (class_key)]
    $default    reduce using rule 331 (class_key)

    identifier  go to state 694


State 558

  434 type_parameter: TEMPLATE . '<' template_parameter_list '>' CLASS identifier
  435               | TEMPLATE . '<' template_parameter_list '>' CLASS identifier '=' template_name

    '<'  shift, and go to state 695


State 559

  231 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  232                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'
  432 type_parameter: TYPENAME . identifier
  433               | TYPENAME . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1
    COLONCOLON  shift, and go to state 163

    $default  reduce using rule 462 (COLONCOLON_opt)

    identifier      go to state 696
    COLONCOLON_opt  go to state 164


State 560

  429 template_parameter: parameter_declaration .

    $default  reduce using rule 429 (template_parameter)


State 561

  425 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list . '>' declaration
  427 template_parameter_list: template_parameter_list . ',' template_parameter

    '>'  shift, and go to state 697
    ','  shift, and go to state 698


State 562

  426 template_parameter_list: template_parameter .

    $default  reduce using rule 426 (template_parameter_list)


State 563

  428 template_parameter: type_parameter .

    $default  reduce using rule 428 (template_parameter)


State 564

  276 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 699


State 565

  275 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 700


State 566

  302 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 701


State 567

  311 parameter_declaration: decl_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 702
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 568

  295 abstract_declarator: ptr_operator abstract_declarator_opt .

    $default  reduce using rule 295 (abstract_declarator)


State 569

  313 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 703
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 570

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  298                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq
  299                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' exception_specification
  300                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    '{'       reduce using rule 327 (class_head)
    $default  reduce using rule 306 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 704
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 571

  301 direct_abstract_declarator: direct_abstract_declarator_opt '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 480 (constant_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 345
    conditional_expression     go to state 346
    constant_expression        go to state 347
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    constant_expression_opt    go to state 705


State 572

  307 parameter_declaration_clause: parameter_declaration_list ',' ELLIPSIS .

    $default  reduce using rule 307 (parameter_declaration_clause)


State 573

  309 parameter_declaration_list: parameter_declaration_list ',' parameter_declaration .

    $default  reduce using rule 309 (parameter_declaration_list)


State 574

  261 asm_definition: ASM '(' string_literal ')' ';' .

    $default  reduce using rule 261 (asm_definition)


State 575

  235 enumerator_list: enumerator_list ',' . enumerator_definition

    IDENTIFIER  shift, and go to state 1

    identifier             go to state 388
    enumerator_definition  go to state 706
    enumerator             go to state 391


State 576

  237 enumerator_definition: enumerator '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 345
    conditional_expression     go to state 346
    constant_expression        go to state 707
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 577

  233 enum_specifier: ENUM identifier '{' enumerator_list_opt '}' .

    $default  reduce using rule 233 (enum_specifier)


State 578

  262 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}' .

    $default  reduce using rule 262 (linkage_specification)


State 579

  244 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}' .

    $default  reduce using rule 244 (extension_namespace_definition)


State 580

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  249 qualified_namespace_specifier: COLONCOLON namespace_name .

    COLONCOLON  shift, and go to state 175

    $default  reduce using rule 249 (qualified_namespace_specifier)


State 581

  248 qualified_namespace_specifier: COLONCOLON nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 708
    original_namespace_name  go to state 48


State 582

  250 qualified_namespace_specifier: nested_name_specifier namespace_name .

    $default  reduce using rule 250 (qualified_namespace_specifier)


State 583

  247 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';' .

    $default  reduce using rule 247 (namespace_alias_definition)


State 584

  243 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}' .

    $default  reduce using rule 243 (original_namespace_definition)


State 585

  232 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 284
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 312
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 313
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument_list     go to state 709
    template_argument          go to state 316
    throw_expression           go to state 317


State 586

  254 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 254 (using_declaration)


State 587

  258 using_directive: USING NAMESPACE COLONCOLON namespace_name ';' .

    $default  reduce using rule 258 (using_directive)


State 588

  257 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 710


State 589

  259 using_directive: USING NAMESPACE nested_name_specifier namespace_name ';' .

    $default  reduce using rule 259 (using_directive)


State 590

  252 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 711


State 591

  253 using_declaration: USING TYPENAME nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 253 (using_declaration)


State 592

   90 delete_expression: COLONCOLON DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 712


State 593

   88 delete_expression: COLONCOLON DELETE cast_expression .

    $default  reduce using rule 88 (delete_expression)


State 594

   77 new_expression: COLONCOLON NEW new_placement_opt . new_type_id new_initializer_opt
   79               | COLONCOLON NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 713

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    new_type_id                go to state 714
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 606
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 595

   61 expression_list: expression_list . ',' assignment_expression
  461 expression_list_opt: expression_list .

    ','  shift, and go to state 647

    $default  reduce using rule 461 (expression_list_opt)


State 596

   43 postfix_expression: BOOL '(' expression_list_opt . ')'

    ')'  shift, and go to state 715


State 597

   42 postfix_expression: CHAR '(' expression_list_opt . ')'

    ')'  shift, and go to state 716


State 598

   57 postfix_expression: CONST_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 717


State 599

   89 delete_expression: DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 718
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 600

   40 postfix_expression: DOUBLE '(' expression_list_opt . ')'

    ')'  shift, and go to state 719


State 601

   54 postfix_expression: DYNAMIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 720


State 602

   41 postfix_expression: INT '(' expression_list_opt . ')'

    ')'  shift, and go to state 721


State 603

   61 expression_list: expression_list . ',' assignment_expression
   80 new_placement: '(' expression_list . ')'

    ')'  shift, and go to state 722
    ','  shift, and go to state 647


State 604

   78 new_expression: NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 723
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 605

   76 new_expression: NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 724

    $default  reduce using rule 466 (new_initializer_opt)

    new_initializer      go to state 725
    new_initializer_opt  go to state 726


State 606

   81 new_type_id: type_specifier_seq . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '['             shift, and go to state 727
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 468 (new_declarator_opt)]
    '&'       [reduce using rule 468 (new_declarator_opt)]
    $default  reduce using rule 468 (new_declarator_opt)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 236
    new_declarator           go to state 728
    direct_new_declarator    go to state 729
    ptr_operator             go to state 730
    template_id              go to state 93
    new_declarator_opt       go to state 731


State 607

   56 postfix_expression: REINTERPRET_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 732


State 608

   69 unary_expression: SIZEOF '(' type_id . ')'

    ')'  shift, and go to state 733


State 609

   55 postfix_expression: STATIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 734


State 610

   58 postfix_expression: TYPEID '(' expression . ')'
  141 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 735
    ','  shift, and go to state 613


State 611

   59 postfix_expression: TYPEID '(' type_id . ')'

    ')'  shift, and go to state 736


State 612

   23 primary_expression: '(' expression ')' .

    $default  reduce using rule 23 (primary_expression)


State 613

  141 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 737
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 614

   92 cast_expression: '(' type_id ')' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 738
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 615

   50 postfix_expression: postfix_expression ARROW COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 739
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 616

   48 postfix_expression: postfix_expression ARROW TEMPLATE . COLONCOLON id_expression
   49                   | postfix_expression ARROW TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 740
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 741
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 617

   51 postfix_expression: postfix_expression ARROW id_expression .

    $default  reduce using rule 51 (postfix_expression)


State 618

   39 postfix_expression: postfix_expression '(' expression_list_opt . ')'

    ')'  shift, and go to state 742


State 619

   38 postfix_expression: postfix_expression '[' expression . ']'
  141 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 743
    ','  shift, and go to state 613


State 620

   46 postfix_expression: postfix_expression '.' COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 744
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 621

   44 postfix_expression: postfix_expression '.' TEMPLATE . COLONCOLON id_expression
   45                   | postfix_expression '.' TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 745
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 746
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 622

   47 postfix_expression: postfix_expression '.' id_expression .

    $default  reduce using rule 47 (postfix_expression)


State 623

   94 pm_expression: pm_expression DOTSTAR cast_expression .

    $default  reduce using rule 94 (pm_expression)


State 624

   95 pm_expression: pm_expression ARROWSTAR cast_expression .

    $default  reduce using rule 95 (pm_expression)


State 625

   94 pm_expression: pm_expression . DOTSTAR cast_expression
   95              | pm_expression . ARROWSTAR cast_expression
   97 multiplicative_expression: multiplicative_expression '*' pm_expression .

    DOTSTAR    shift, and go to state 450
    ARROWSTAR  shift, and go to state 451

    $default  reduce using rule 97 (multiplicative_expression)


State 626

   94 pm_expression: pm_expression . DOTSTAR cast_expression
   95              | pm_expression . ARROWSTAR cast_expression
   98 multiplicative_expression: multiplicative_expression '/' pm_expression .

    DOTSTAR    shift, and go to state 450
    ARROWSTAR  shift, and go to state 451

    $default  reduce using rule 98 (multiplicative_expression)


State 627

   94 pm_expression: pm_expression . DOTSTAR cast_expression
   95              | pm_expression . ARROWSTAR cast_expression
   99 multiplicative_expression: multiplicative_expression '%' pm_expression .

    DOTSTAR    shift, and go to state 450
    ARROWSTAR  shift, and go to state 451

    $default  reduce using rule 99 (multiplicative_expression)


State 628

   97 multiplicative_expression: multiplicative_expression . '*' pm_expression
   98                          | multiplicative_expression . '/' pm_expression
   99                          | multiplicative_expression . '%' pm_expression
  101 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 452
    '/'  shift, and go to state 453
    '%'  shift, and go to state 454

    $default  reduce using rule 101 (additive_expression)


State 629

   97 multiplicative_expression: multiplicative_expression . '*' pm_expression
   98                          | multiplicative_expression . '/' pm_expression
   99                          | multiplicative_expression . '%' pm_expression
  102 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 452
    '/'  shift, and go to state 453
    '%'  shift, and go to state 454

    $default  reduce using rule 102 (additive_expression)


State 630

  101 additive_expression: additive_expression . '+' multiplicative_expression
  102                    | additive_expression . '-' multiplicative_expression
  104 shift_expression: shift_expression SL additive_expression .

    '+'  shift, and go to state 455
    '-'  shift, and go to state 456

    $default  reduce using rule 104 (shift_expression)


State 631

  101 additive_expression: additive_expression . '+' multiplicative_expression
  102                    | additive_expression . '-' multiplicative_expression
  105 shift_expression: shift_expression SR additive_expression .

    '+'  shift, and go to state 455
    '-'  shift, and go to state 456

    $default  reduce using rule 105 (shift_expression)


State 632

  104 shift_expression: shift_expression . SL additive_expression
  105                 | shift_expression . SR additive_expression
  109 relational_expression: relational_expression LTEQ shift_expression .

    SL  shift, and go to state 457
    SR  shift, and go to state 458

    $default  reduce using rule 109 (relational_expression)


State 633

  104 shift_expression: shift_expression . SL additive_expression
  105                 | shift_expression . SR additive_expression
  110 relational_expression: relational_expression GTEQ shift_expression .

    SL  shift, and go to state 457
    SR  shift, and go to state 458

    $default  reduce using rule 110 (relational_expression)


State 634

  104 shift_expression: shift_expression . SL additive_expression
  105                 | shift_expression . SR additive_expression
  107 relational_expression: relational_expression '<' shift_expression .

    SL  shift, and go to state 457
    SR  shift, and go to state 458

    $default  reduce using rule 107 (relational_expression)


State 635

  104 shift_expression: shift_expression . SL additive_expression
  105                 | shift_expression . SR additive_expression
  108 relational_expression: relational_expression '>' shift_expression .

    SL  shift, and go to state 457
    SR  shift, and go to state 458

    $default  reduce using rule 108 (relational_expression)


State 636

  107 relational_expression: relational_expression . '<' shift_expression
  108                      | relational_expression . '>' shift_expression
  109                      | relational_expression . LTEQ shift_expression
  110                      | relational_expression . GTEQ shift_expression
  112 equality_expression: equality_expression EQ relational_expression .

    LTEQ  shift, and go to state 459
    GTEQ  shift, and go to state 460
    '<'   shift, and go to state 461
    '>'   shift, and go to state 462

    '>'       [reduce using rule 112 (equality_expression)]
    $default  reduce using rule 112 (equality_expression)


State 637

  107 relational_expression: relational_expression . '<' shift_expression
  108                      | relational_expression . '>' shift_expression
  109                      | relational_expression . LTEQ shift_expression
  110                      | relational_expression . GTEQ shift_expression
  113 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 459
    GTEQ  shift, and go to state 460
    '<'   shift, and go to state 461
    '>'   shift, and go to state 462

    '>'       [reduce using rule 113 (equality_expression)]
    $default  reduce using rule 113 (equality_expression)


State 638

  112 equality_expression: equality_expression . EQ relational_expression
  113                    | equality_expression . NOTEQ relational_expression
  115 and_expression: and_expression '&' equality_expression .

    EQ     shift, and go to state 463
    NOTEQ  shift, and go to state 464

    $default  reduce using rule 115 (and_expression)


State 639

  115 and_expression: and_expression . '&' equality_expression
  117 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 465

    $default  reduce using rule 117 (exclusive_or_expression)


State 640

  117 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  119 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 466

    $default  reduce using rule 119 (inclusive_or_expression)


State 641

  119 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  121 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    '|'  shift, and go to state 467

    $default  reduce using rule 121 (logical_and_expression)


State 642

  121 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  123 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 468

    $default  reduce using rule 123 (logical_or_expression)


State 643

  125 conditional_expression: logical_or_expression '?' expression . ':' assignment_expression
  141 expression: expression . ',' assignment_expression

    ','  shift, and go to state 613
    ':'  shift, and go to state 747


State 644

  127 assignment_expression: logical_or_expression assignment_operator assignment_expression .

    $default  reduce using rule 127 (assignment_expression)


State 645

  438 template_argument_list: template_argument_list ',' template_argument .

    $default  reduce using rule 438 (template_argument_list)


State 646

  320 initializer: '(' expression_list ')' .

    $default  reduce using rule 320 (initializer)


State 647

   61 expression_list: expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 748
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 648

  323 initializer_clause: '{' '}' .

    $default  reduce using rule 323 (initializer_clause)


State 649

  324 initializer_list: initializer_clause .

    $default  reduce using rule 324 (initializer_list)


State 650

  322 initializer_clause: '{' initializer_list . COMMA_opt '}'
  325 initializer_list: initializer_list . ',' initializer_clause

    ','  shift, and go to state 749

    $default  reduce using rule 490 (COMMA_opt)

    COMMA_opt  go to state 750


State 651

  447 handler: CATCH . '(' exception_declaration ')' compound_statement

    '('  shift, and go to state 751


State 652

  445 function_try_block: TRY ctor_initializer_opt function_body handler_seq .

    $default  reduce using rule 445 (function_try_block)


State 653

  446 handler_seq: handler . handler_seq_opt

    CATCH  shift, and go to state 651

    $default  reduce using rule 500 (handler_seq_opt)

    handler_seq      go to state 752
    handler          go to state 653
    handler_seq_opt  go to state 753


State 654

  377 mem_initializer_id: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 377 (mem_initializer_id)


State 655

  375 mem_initializer_list: mem_initializer ',' mem_initializer_list .

    $default  reduce using rule 375 (mem_initializer_list)


State 656

  376 mem_initializer: mem_initializer_id '(' expression_list_opt . ')'

    ')'  shift, and go to state 754


State 657

  168 jump_statement: BREAK ';' .

    $default  reduce using rule 168 (jump_statement)


State 658

  152 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 755


State 659

  169 jump_statement: CONTINUE ';' .

    $default  reduce using rule 169 (jump_statement)


State 660

  153 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 756
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529


State 661

  164 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 757


State 662

  165 iteration_statement: FOR '(' . for_init_statement condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FRIEND            shift, and go to state 20
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    ';'       reduce using rule 470 (expression_opt)
    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 516
    expression_statement       go to state 758
    for_init_statement         go to state 759
    simple_declaration         go to state 760
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 527
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    expression_opt             go to state 529


State 663

  171 jump_statement: GOTO identifier . ';'

    ';'  shift, and go to state 761


State 664

  158 selection_statement: IF '(' . condition ')' statement
  159                    | IF '(' . condition ')' statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 762
    condition                  go to state 763
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 764
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 665

  247 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 226


State 666

  170 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 765


State 667

  160 selection_statement: SWITCH '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 762
    condition                  go to state 766
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 764
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 668

  444 try_block: TRY compound_statement . handler_seq

    CATCH  shift, and go to state 651

    handler_seq  go to state 767
    handler      go to state 653


State 669

  163 iteration_statement: WHILE '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 762
    condition                  go to state 768
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 764
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 670

  151 labeled_statement: identifier ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 769
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529


State 671

  157 statement_seq: statement_seq statement .

    $default  reduce using rule 157 (statement_seq)


State 672

  154 expression_statement: expression_opt ';' .

    $default  reduce using rule 154 (expression_statement)


State 673

  155 compound_statement: '{' statement_seq_opt '}' .

    $default  reduce using rule 155 (compound_statement)


State 674

  453 exception_specification: THROW . '(' type_id_list_opt ')'

    '('  shift, and go to state 770


State 675

  270 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  271                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 674

    $default  reduce using rule 271 (direct_declarator)

    exception_specification  go to state 771


State 676

  272 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 272 (direct_declarator)


State 677

  349 member_declarator: identifier ':' constant_expression .

    $default  reduce using rule 349 (member_declarator)


State 678

  336 member_declaration: decl_specifier_seq member_declarator_list ';' .

    $default  reduce using rule 336 (member_declaration)


State 679

  350 pure_specifier: '=' '0' .

    $default  reduce using rule 350 (pure_specifier)


State 680

  351 constant_initializer: '=' constant_expression .

    $default  reduce using rule 351 (constant_initializer)


State 681

  346 member_declarator: declarator .
  347                  | declarator . pure_specifier
  348                  | declarator . constant_initializer

    '='  shift, and go to state 538

    $default  reduce using rule 346 (member_declarator)

    pure_specifier        go to state 539
    constant_initializer  go to state 540


State 682

  345 member_declarator_list: member_declarator_list ',' member_declarator .

    $default  reduce using rule 345 (member_declarator_list)


State 683

  335 member_specification: access_specifier ':' member_specification_opt .

    $default  reduce using rule 335 (member_specification)


State 684

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  356 base_specifier: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 356 (base_specifier)


State 685

  355 base_specifier: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 772
    template_name  go to state 51
    template_id    go to state 93


State 686

  361 base_specifier: VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 773


State 687

  359 base_specifier: VIRTUAL access_specifier . COLONCOLON nested_name_specifier_opt class_name
  360               | VIRTUAL access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 774

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 775


State 688

  362 base_specifier: VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 776
    template_name  go to state 51
    template_id    go to state 93


State 689

  357 base_specifier: nested_name_specifier class_name .

    $default  reduce using rule 357 (base_specifier)


State 690

  354 base_specifier_list: base_specifier_list ',' . base_specifier

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 549
    PRIVATE         shift, and go to state 349
    PROTECTED       shift, and go to state 350
    PUBLIC          shift, and go to state 351
    VIRTUAL         shift, and go to state 550

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 551
    template_name            go to state 51
    nested_name_specifier    go to state 552
    base_specifier           go to state 777
    access_specifier         go to state 555
    template_id              go to state 93


State 691

  365 base_specifier: access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 778


State 692

  363 base_specifier: access_specifier VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  364               | access_specifier VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 779

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 780


State 693

  366 base_specifier: access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 781
    template_name  go to state 51
    template_id    go to state 93


State 694

  430 type_parameter: CLASS identifier .
  431               | CLASS identifier . '=' type_id

    '='  shift, and go to state 782

    $default  reduce using rule 430 (type_parameter)


State 695

  434 type_parameter: TEMPLATE '<' . template_parameter_list '>' CLASS identifier
  435               | TEMPLATE '<' . template_parameter_list '>' CLASS identifier '=' template_name

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 557
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 558
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 559
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 560
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter_list    go to state 783
    template_parameter         go to state 562
    type_parameter             go to state 563
    template_id                go to state 93


State 696

  432 type_parameter: TYPENAME identifier .
  433               | TYPENAME identifier . '=' type_id

    '='  shift, and go to state 784

    $default  reduce using rule 432 (type_parameter)


State 697

  425 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    $default  reduce using rule 327 (class_head)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 785
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 698

  427 template_parameter_list: template_parameter_list ',' . template_parameter

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 557
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 558
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 559
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 560
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter         go to state 786
    type_parameter             go to state 563
    template_id                go to state 93


State 699

  276 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')' .

    $default  reduce using rule 276 (direct_declarator)


State 700

  275 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause ')' .

    $default  reduce using rule 275 (direct_declarator)


State 701

  302 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 302 (direct_abstract_declarator)


State 702

  311 parameter_declaration: decl_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 311 (parameter_declaration)


State 703

  313 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' assignment_expression .

    $default  reduce using rule 313 (parameter_declaration)


State 704

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq
  299                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' exception_specification
  300                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 787


State 705

  301 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt . ']'

    ']'  shift, and go to state 788


State 706

  235 enumerator_list: enumerator_list ',' enumerator_definition .

    $default  reduce using rule 235 (enumerator_list)


State 707

  237 enumerator_definition: enumerator '=' constant_expression .

    $default  reduce using rule 237 (enumerator_definition)


State 708

  248 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name .

    $default  reduce using rule 248 (qualified_namespace_specifier)


State 709

  232 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list . '>'
  438 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 789
    ','  shift, and go to state 487


State 710

  257 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';' .

    $default  reduce using rule 257 (using_directive)


State 711

  252 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 252 (using_declaration)


State 712

   90 delete_expression: COLONCOLON DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 285
    integer_literal          go to state 286
    character_literal        go to state 287
    floating_literal         go to state 288
    string_literal           go to state 289
    boolean_literal          go to state 290
    primary_expression       go to state 291
    id_expression            go to state 292
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 294
    unary_expression         go to state 295
    unary_operator           go to state 296
    new_expression           go to state 297
    delete_expression        go to state 298
    cast_expression          go to state 790
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 713

   79 new_expression: COLONCOLON NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 791
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 714

   77 new_expression: COLONCOLON NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 724

    $default  reduce using rule 466 (new_initializer_opt)

    new_initializer      go to state 725
    new_initializer_opt  go to state 792


State 715

   43 postfix_expression: BOOL '(' expression_list_opt ')' .

    $default  reduce using rule 43 (postfix_expression)


State 716

   42 postfix_expression: CHAR '(' expression_list_opt ')' .

    $default  reduce using rule 42 (postfix_expression)


State 717

   57 postfix_expression: CONST_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 793


State 718

   89 delete_expression: DELETE '[' ']' cast_expression .

    $default  reduce using rule 89 (delete_expression)


State 719

   40 postfix_expression: DOUBLE '(' expression_list_opt ')' .

    $default  reduce using rule 40 (postfix_expression)


State 720

   54 postfix_expression: DYNAMIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 794


State 721

   41 postfix_expression: INT '(' expression_list_opt ')' .

    $default  reduce using rule 41 (postfix_expression)


State 722

   80 new_placement: '(' expression_list ')' .

    $default  reduce using rule 80 (new_placement)


State 723

   78 new_expression: NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 795


State 724

   86 new_initializer: '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    expression_list            go to state 595
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 491
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    expression_list_opt        go to state 796


State 725

  467 new_initializer_opt: new_initializer .

    $default  reduce using rule 467 (new_initializer_opt)


State 726

   76 new_expression: NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 76 (new_expression)


State 727

   84 direct_new_declarator: '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 797
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 728

  469 new_declarator_opt: new_declarator .

    $default  reduce using rule 469 (new_declarator_opt)


State 729

   83 new_declarator: direct_new_declarator .
   85 direct_new_declarator: direct_new_declarator . '[' constant_expression ']'

    '['  shift, and go to state 798

    $default  reduce using rule 83 (new_declarator)


State 730

   82 new_declarator: ptr_operator . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '['             shift, and go to state 727
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 468 (new_declarator_opt)]
    '&'       [reduce using rule 468 (new_declarator_opt)]
    $default  reduce using rule 468 (new_declarator_opt)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 236
    new_declarator           go to state 728
    direct_new_declarator    go to state 729
    ptr_operator             go to state 730
    template_id              go to state 93
    new_declarator_opt       go to state 799


State 731

   81 new_type_id: type_specifier_seq new_declarator_opt .

    $default  reduce using rule 81 (new_type_id)


State 732

   56 postfix_expression: REINTERPRET_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 800


State 733

   69 unary_expression: SIZEOF '(' type_id ')' .

    $default  reduce using rule 69 (unary_expression)


State 734

   55 postfix_expression: STATIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 801


State 735

   58 postfix_expression: TYPEID '(' expression ')' .

    $default  reduce using rule 58 (postfix_expression)


State 736

   59 postfix_expression: TYPEID '(' type_id ')' .

    $default  reduce using rule 59 (postfix_expression)


State 737

  141 expression: expression ',' assignment_expression .

    $default  reduce using rule 141 (expression)


State 738

   92 cast_expression: '(' type_id ')' cast_expression .

    $default  reduce using rule 92 (cast_expression)


State 739

   50 postfix_expression: postfix_expression ARROW COLONCOLON id_expression .

    $default  reduce using rule 50 (postfix_expression)


State 740

   48 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 802
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 741

   49 postfix_expression: postfix_expression ARROW TEMPLATE id_expression .

    $default  reduce using rule 49 (postfix_expression)


State 742

   39 postfix_expression: postfix_expression '(' expression_list_opt ')' .

    $default  reduce using rule 39 (postfix_expression)


State 743

   38 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 38 (postfix_expression)


State 744

   46 postfix_expression: postfix_expression '.' COLONCOLON id_expression .

    $default  reduce using rule 46 (postfix_expression)


State 745

   44 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 803
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 746

   45 postfix_expression: postfix_expression '.' TEMPLATE id_expression .

    $default  reduce using rule 45 (postfix_expression)


State 747

  125 conditional_expression: logical_or_expression '?' expression ':' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 804
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 748

   61 expression_list: expression_list ',' assignment_expression .

    $default  reduce using rule 61 (expression_list)


State 749

  325 initializer_list: initializer_list ',' . initializer_clause
  491 COMMA_opt: ',' .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 492

    $default  reduce using rule 491 (COMMA_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 493
    initializer_clause         go to state 805
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 750

  322 initializer_clause: '{' initializer_list COMMA_opt . '}'

    '}'  shift, and go to state 806


State 751

  447 handler: CATCH '(' . exception_declaration ')' compound_statement

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 807
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 808
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    exception_declaration      go to state 809


State 752

  501 handler_seq_opt: handler_seq .

    $default  reduce using rule 501 (handler_seq_opt)


State 753

  446 handler_seq: handler handler_seq_opt .

    $default  reduce using rule 446 (handler_seq)


State 754

  376 mem_initializer: mem_initializer_id '(' expression_list_opt ')' .

    $default  reduce using rule 376 (mem_initializer)


State 755

  152 labeled_statement: CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 810
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529


State 756

  153 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 153 (labeled_statement)


State 757

  164 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 811


State 758

  166 for_init_statement: expression_statement .

    $default  reduce using rule 166 (for_init_statement)


State 759

  165 iteration_statement: FOR '(' for_init_statement . condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 261
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    ';'       reduce using rule 474 (condition_opt)
    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 293
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 762
    condition                  go to state 812
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 764
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    condition_opt              go to state 813


State 760

  167 for_init_statement: simple_declaration .

    $default  reduce using rule 167 (for_init_statement)


State 761

  171 jump_statement: GOTO identifier ';' .

    $default  reduce using rule 171 (jump_statement)


State 762

  141 expression: expression . ',' assignment_expression
  161 condition: expression .

    ','  shift, and go to state 613

    $default  reduce using rule 161 (condition)


State 763

  158 selection_statement: IF '(' condition . ')' statement
  159                    | IF '(' condition . ')' statement ELSE statement

    ')'  shift, and go to state 814


State 764

  162 condition: type_specifier_seq . declarator '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 815
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 765

  170 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 170 (jump_statement)


State 766

  160 selection_statement: SWITCH '(' condition . ')' statement

    ')'  shift, and go to state 816


State 767

  444 try_block: TRY compound_statement handler_seq .

    $default  reduce using rule 444 (try_block)


State 768

  163 iteration_statement: WHILE '(' condition . ')' statement

    ')'  shift, and go to state 817


State 769

  151 labeled_statement: identifier ':' statement .

    $default  reduce using rule 151 (labeled_statement)


State 770

  453 exception_specification: THROW '(' . type_id_list_opt ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    ')'       reduce using rule 504 (type_id_list_opt)
    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 818
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    type_id_list               go to state 819
    type_id_list_opt           go to state 820


State 771

  270 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 270 (direct_declarator)


State 772

  355 base_specifier: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 355 (base_specifier)


State 773

  361 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 821
    template_name  go to state 51
    template_id    go to state 93


State 774

  359 base_specifier: VIRTUAL access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 822


State 775

  360 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 823
    template_name  go to state 51
    template_id    go to state 93


State 776

  362 base_specifier: VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 362 (base_specifier)


State 777

  354 base_specifier_list: base_specifier_list ',' base_specifier .

    $default  reduce using rule 354 (base_specifier_list)


State 778

  365 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 824
    template_name  go to state 51
    template_id    go to state 93


State 779

  363 base_specifier: access_specifier VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 825


State 780

  364 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 826
    template_name  go to state 51
    template_id    go to state 93


State 781

  366 base_specifier: access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 366 (base_specifier)


State 782

  431 type_parameter: CLASS identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 827
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 783

  427 template_parameter_list: template_parameter_list . ',' template_parameter
  434 type_parameter: TEMPLATE '<' template_parameter_list . '>' CLASS identifier
  435               | TEMPLATE '<' template_parameter_list . '>' CLASS identifier '=' template_name

    '>'  shift, and go to state 828
    ','  shift, and go to state 698


State 784

  433 type_parameter: TYPENAME identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 829
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 785

  425 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration .

    $default  reduce using rule 425 (template_declaration)


State 786

  427 template_parameter_list: template_parameter_list ',' template_parameter .

    $default  reduce using rule 427 (template_parameter_list)


State 787

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq
  299                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . exception_specification
  300                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 674
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 300 (direct_abstract_declarator)

    cv_qualifier_seq         go to state 830
    cv_qualifier             go to state 174
    exception_specification  go to state 831


State 788

  301 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt ']' .

    $default  reduce using rule 301 (direct_abstract_declarator)


State 789

  232 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>' .

    $default  reduce using rule 232 (elaborated_type_specifier)


State 790

   90 delete_expression: COLONCOLON DELETE '[' ']' cast_expression .

    $default  reduce using rule 90 (delete_expression)


State 791

   79 new_expression: COLONCOLON NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 832


State 792

   77 new_expression: COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 77 (new_expression)


State 793

   57 postfix_expression: CONST_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 833
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 794

   54 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 834
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 795

   78 new_expression: NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 724

    $default  reduce using rule 466 (new_initializer_opt)

    new_initializer      go to state 725
    new_initializer_opt  go to state 835


State 796

   86 new_initializer: '(' expression_list_opt . ')'

    ')'  shift, and go to state 836


State 797

   84 direct_new_declarator: '[' expression . ']'
  141 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 837
    ','  shift, and go to state 613


State 798

   85 direct_new_declarator: direct_new_declarator '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 345
    conditional_expression     go to state 346
    constant_expression        go to state 838
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 799

   82 new_declarator: ptr_operator new_declarator_opt .

    $default  reduce using rule 82 (new_declarator)


State 800

   56 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 839
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 801

   55 postfix_expression: STATIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 840
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 802

   48 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 48 (postfix_expression)


State 803

   44 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 44 (postfix_expression)


State 804

  125 conditional_expression: logical_or_expression '?' expression ':' assignment_expression .

    $default  reduce using rule 125 (conditional_expression)


State 805

  325 initializer_list: initializer_list ',' initializer_clause .

    $default  reduce using rule 325 (initializer_list)


State 806

  322 initializer_clause: '{' initializer_list COMMA_opt '}' .

    $default  reduce using rule 322 (initializer_clause)


State 807

  451 exception_declaration: ELLIPSIS .

    $default  reduce using rule 451 (exception_declaration)


State 808

  448 exception_declaration: type_specifier_seq . declarator
  449                      | type_specifier_seq . abstract_declarator
  450                      | type_specifier_seq .

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 376
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    $default  reduce using rule 450 (exception_declaration)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 170
    declarator                      go to state 841
    direct_declarator               go to state 82
    ptr_operator                    go to state 378
    declarator_id                   go to state 85
    abstract_declarator             go to state 842
    direct_abstract_declarator      go to state 380
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 382


State 809

  447 handler: CATCH '(' exception_declaration . ')' compound_statement

    ')'  shift, and go to state 843


State 810

  152 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 152 (labeled_statement)


State 811

  164 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 844
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 812

  475 condition_opt: condition .

    $default  reduce using rule 475 (condition_opt)


State 813

  165 iteration_statement: FOR '(' for_init_statement condition_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 845


State 814

  158 selection_statement: IF '(' condition ')' . statement
  159                    | IF '(' condition ')' . statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 846
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529


State 815

  162 condition: type_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 847


State 816

  160 selection_statement: SWITCH '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 848
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529


State 817

  163 iteration_statement: WHILE '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 849
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529


State 818

  454 type_id_list: type_id .

    $default  reduce using rule 454 (type_id_list)


State 819

  455 type_id_list: type_id_list . ',' type_id
  505 type_id_list_opt: type_id_list .

    ','  shift, and go to state 850

    $default  reduce using rule 505 (type_id_list_opt)


State 820

  453 exception_specification: THROW '(' type_id_list_opt . ')'

    ')'  shift, and go to state 851


State 821

  361 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 361 (base_specifier)


State 822

  359 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 852
    template_name  go to state 51
    template_id    go to state 93


State 823

  360 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 360 (base_specifier)


State 824

  365 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 365 (base_specifier)


State 825

  363 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 853
    template_name  go to state 51
    template_id    go to state 93


State 826

  364 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 364 (base_specifier)


State 827

  431 type_parameter: CLASS identifier '=' type_id .

    $default  reduce using rule 431 (type_parameter)


State 828

  434 type_parameter: TEMPLATE '<' template_parameter_list '>' . CLASS identifier
  435               | TEMPLATE '<' template_parameter_list '>' . CLASS identifier '=' template_name

    CLASS  shift, and go to state 854


State 829

  433 type_parameter: TYPENAME identifier '=' type_id .

    $default  reduce using rule 433 (type_parameter)


State 830

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 674

    $default  reduce using rule 298 (direct_abstract_declarator)

    exception_specification  go to state 855


State 831

  299 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 299 (direct_abstract_declarator)


State 832

   79 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 724

    $default  reduce using rule 466 (new_initializer_opt)

    new_initializer      go to state 725
    new_initializer_opt  go to state 856


State 833

   57 postfix_expression: CONST_CAST '<' type_id '>' '(' expression . ')'
  141 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 857
    ','  shift, and go to state 613


State 834

   54 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression . ')'
  141 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 858
    ','  shift, and go to state 613


State 835

   78 new_expression: NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 78 (new_expression)


State 836

   86 new_initializer: '(' expression_list_opt ')' .

    $default  reduce using rule 86 (new_initializer)


State 837

   84 direct_new_declarator: '[' expression ']' .

    $default  reduce using rule 84 (direct_new_declarator)


State 838

   85 direct_new_declarator: direct_new_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 859


State 839

   56 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression . ')'
  141 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 860
    ','  shift, and go to state 613


State 840

   55 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression . ')'
  141 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 861
    ','  shift, and go to state 613


State 841

  448 exception_declaration: type_specifier_seq declarator .

    $default  reduce using rule 448 (exception_declaration)


State 842

  449 exception_declaration: type_specifier_seq abstract_declarator .

    $default  reduce using rule 449 (exception_declaration)


State 843

  447 handler: CATCH '(' exception_declaration ')' . compound_statement

    '{'  shift, and go to state 336

    compound_statement  go to state 862


State 844

  141 expression: expression . ',' assignment_expression
  164 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 863
    ','  shift, and go to state 613


State 845

  165 iteration_statement: FOR '(' for_init_statement condition_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    $default  reduce using rule 470 (expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 438
    expression                 go to state 516
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317
    expression_opt             go to state 864


State 846

  158 selection_statement: IF '(' condition ')' statement .
  159                    | IF '(' condition ')' statement . ELSE statement

    ELSE  shift, and go to state 865

    ELSE      [reduce using rule 158 (selection_statement)]
    $default  reduce using rule 158 (selection_statement)


State 847

  162 condition: type_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 340
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 341
    CHAR              shift, and go to state 342
    CONST_CAST        shift, and go to state 263
    DELETE            shift, and go to state 264
    DOUBLE            shift, and go to state 343
    DYNAMIC_CAST      shift, and go to state 266
    FALSE             shift, and go to state 267
    INT               shift, and go to state 344
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 270
    SIZEOF            shift, and go to state 271
    STATIC_CAST       shift, and go to state 272
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TYPEID            shift, and go to state 276
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 285
    integer_literal            go to state 286
    character_literal          go to state 287
    floating_literal           go to state 288
    string_literal             go to state 289
    boolean_literal            go to state 290
    primary_expression         go to state 291
    id_expression              go to state 292
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 294
    unary_expression           go to state 295
    unary_operator             go to state 296
    new_expression             go to state 297
    delete_expression          go to state 298
    cast_expression            go to state 299
    pm_expression              go to state 300
    multiplicative_expression  go to state 301
    additive_expression        go to state 302
    shift_expression           go to state 303
    relational_expression      go to state 304
    equality_expression        go to state 305
    and_expression             go to state 306
    exclusive_or_expression    go to state 307
    inclusive_or_expression    go to state 308
    logical_and_expression     go to state 309
    logical_or_expression      go to state 310
    conditional_expression     go to state 311
    assignment_expression      go to state 866
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 317


State 848

  160 selection_statement: SWITCH '(' condition ')' statement .

    $default  reduce using rule 160 (selection_statement)


State 849

  163 iteration_statement: WHILE '(' condition ')' statement .

    $default  reduce using rule 163 (iteration_statement)


State 850

  455 type_id_list: type_id_list ',' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 327 (class_head)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 867
    type_specifier_seq         go to state 314
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 851

  453 exception_specification: THROW '(' type_id_list_opt ')' .

    $default  reduce using rule 453 (exception_specification)


State 852

  359 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 359 (base_specifier)


State 853

  363 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 363 (base_specifier)


State 854

  434 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS . identifier
  435               | TEMPLATE '<' template_parameter_list '>' CLASS . identifier '=' template_name

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 868


State 855

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 297 (direct_abstract_declarator)


State 856

   79 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 79 (new_expression)


State 857

   57 postfix_expression: CONST_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 57 (postfix_expression)


State 858

   54 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 54 (postfix_expression)


State 859

   85 direct_new_declarator: direct_new_declarator '[' constant_expression ']' .

    $default  reduce using rule 85 (direct_new_declarator)


State 860

   56 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 56 (postfix_expression)


State 861

   55 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 55 (postfix_expression)


State 862

  447 handler: CATCH '(' exception_declaration ')' compound_statement .

    $default  reduce using rule 447 (handler)


State 863

  164 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 869


State 864

  165 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 870


State 865

  159 selection_statement: IF '(' condition ')' statement ELSE . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 871
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529


State 866

  162 condition: type_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 162 (condition)


State 867

  455 type_id_list: type_id_list ',' type_id .

    $default  reduce using rule 455 (type_id_list)


State 868

  434 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier .
  435               | TEMPLATE '<' template_parameter_list '>' CLASS identifier . '=' template_name

    '='  shift, and go to state 872

    $default  reduce using rule 434 (type_parameter)


State 869

  164 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 164 (iteration_statement)


State 870

  165 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 261
    BREAK             shift, and go to state 502
    CASE              shift, and go to state 503
    CHAR              shift, and go to state 262
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 263
    CONTINUE          shift, and go to state 504
    DEFAULT           shift, and go to state 505
    DELETE            shift, and go to state 264
    DO                shift, and go to state 506
    DOUBLE            shift, and go to state 265
    DYNAMIC_CAST      shift, and go to state 266
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 267
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 507
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 508
    IF                shift, and go to state 509
    INLINE            shift, and go to state 21
    INT               shift, and go to state 268
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 510
    NEW               shift, and go to state 269
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 270
    RETURN            shift, and go to state 511
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 271
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 272
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 512
    THIS              shift, and go to state 273
    THROW             shift, and go to state 274
    TRUE              shift, and go to state 275
    TRY               shift, and go to state 513
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 276
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 514
    '('               shift, and go to state 277
    '~'               shift, and go to state 278
    '*'               shift, and go to state 279
    '&'               shift, and go to state 280
    '+'               shift, and go to state 281
    '-'               shift, and go to state 282
    '!'               shift, and go to state 283
    '{'               shift, and go to state 336

    '{'       [reduce using rule 327 (class_head)]
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 515
    literal                     go to state 285
    integer_literal             go to state 286
    character_literal           go to state 287
    floating_literal            go to state 288
    string_literal              go to state 289
    boolean_literal             go to state 290
    primary_expression          go to state 291
    id_expression               go to state 292
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 293
    postfix_expression          go to state 294
    unary_expression            go to state 295
    unary_operator              go to state 296
    new_expression              go to state 297
    delete_expression           go to state 298
    cast_expression             go to state 299
    pm_expression               go to state 300
    multiplicative_expression   go to state 301
    additive_expression         go to state 302
    shift_expression            go to state 303
    relational_expression       go to state 304
    equality_expression         go to state 305
    and_expression              go to state 306
    exclusive_or_expression     go to state 307
    inclusive_or_expression     go to state 308
    logical_and_expression      go to state 309
    logical_or_expression       go to state 310
    conditional_expression      go to state 311
    assignment_expression       go to state 438
    expression                  go to state 516
    statement                   go to state 873
    labeled_statement           go to state 518
    expression_statement        go to state 519
    compound_statement          go to state 520
    selection_statement         go to state 522
    iteration_statement         go to state 523
    jump_statement              go to state 524
    declaration_statement       go to state 525
    block_declaration           go to state 526
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 527
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 528
    throw_expression            go to state 317
    expression_opt              go to state 529


State 871

  159 selection_statement: IF '(' condition ')' statement ELSE statement .

    $default  reduce using rule 159 (selection_statement)


State 872

  435 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' . template_name

    TEMPLATE_NAME  shift, and go to state 6

    template_name  go to state 874


State 873

  165 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement .

    $default  reduce using rule 165 (iteration_statement)


State 874

  435 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name .

    $default  reduce using rule 435 (type_parameter)
